{"title": "10 Things to do first in Arch Linux", "content": "<p><iframe title=\"10 Things to do first in Arch Linux\" width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/jW4GFGOIUjc?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></p>\n<p> </p>\n<p># 1 . Install LTS kernel</p>\n<p>I also recommend to watch the detailed video \u201cWhy and How to install the LTS kernel\u201d https://youtu.be/b-H3jURTgqk</p>\n<p>Check your current kernel:<br />\numane -r</p>\n<p>Install an LTS kernel and reconfigure grub:<br />\nsudo pacman -S linux-lts<br />\nsudo grub-mkconfig -o /boot/grub/grub.cfg</p>\n<p>You may also install linux-lts-headers.<br />\nReboot and check which kernel is in use with uname -r.</p>\n<p>Remove non-lts kernel<br />\nsudo pacman -Rs linux</p>\n<p># 2. Install Microcode</p>\n<p>For intel processors with grub boot loader:<br />\nsudo pacman -S intel-ucode<br />\nsudo grub-mkconfig -o /boot/grub/grub.cfg</p>\n<p>For AMD processors install linux-firmware package.</p>\n<p># 3. Disable GRUB delay</p>\n<p>Add the following to /etc/default/grub:<br />\n# achieve the fastest possible boot:<br />\nGRUB_FORCE_HIDDEN_MENU=\u201dtrue\u201d</p>\n<p>Then put file 31_hold_shift to /etc/grub.d/.<br />\nDownload 31_hold_shift https://goo.gl/nac6Kp</p>\n<p>Make it executable, and regenerate the grub configuration:<br />\nsudo chmod a+x /etc/grub.d/31_hold_shift<br />\nsudo grub-mkconfig -o /boot/grub/grub.cfg</p>\n<p># 4. Install some key packages</p>\n<p>sudo pacman -S adobe-source-sans-pro-fonts aspell-en enchant gst-libav gst-plugins-good hunspell-en icedtea-web jre8-openjdk languagetool libmythes mythes-en pkgstats ttf-anonymous-pro ttf-bitstream-vera ttf-dejavu ttf-droid ttf-gentium ttf-liberation ttf-ubuntu-font-family</p>\n<p># 5. Set up firewall</p>\n<p>Install ufw:<br />\nsudo pacman -S ufw</p>\n<p>Enable it.<br />\nsudo ufw enable</p>\n<p>Check its status:<br />\nsudo ufw status verbose</p>\n<p>Enable the start-up with the system:<br />\nsudo systemctl enable ufw.service</p>\n<p>Reboot and check the status again. It should be active.</p>\n<p># 6. Encrypt your home directory</p>\n<p>Logged out. Switch to a console with Ctrl+Alt+F2. Login as a root and check that your user own no processes:<br />\nps -U username</p>\n<p>Install the necessary applications:<br />\nsudo pacman -S rsync lsof ecryptfs-utils</p>\n<p>Then encrypt your home directory:<br />\nmodprobe ecryptfs<br />\necryptfs-migrate-home -u username</p>\n<p>Mount your encrypted home.<br />\necryptfs-mount-private</p>\n<p>Unwrap the passphrase and save it somewhere where only you can access it.<br />\necryptfs-unwrap-passphrase</p>\n<p>Run<br />\nls .ecryptfs</p>\n<p>Edit /etc/pam.d/system-auth:</p>\n<p>After the line \u201cauth required pam_unix.so\u201d add:<br />\nauth required pam_ecryptfs.so unwrap</p>\n<p>Above the line \u201cpassword required pam_unix.so\u201d insert:<br />\npassword optional pam_ecryptfs.so</p>\n<p>After the line \u201csession required pam_unix.so\u201d add:<br />\nsession optional pam_ecryptfs.so unwrap</p>\n<p>Reboot and make sure that you can login to your desktop</p>\n<p># 7. Remove orphans</p>\n<p>sudo pacman -Rns $(pacman -Qtdq)</p>\n<p># 8. Optimize pacman&#8217;s database access speeds</p>\n<p>sudo pacman-optimize</p>\n<p>9. Check for errors</p>\n<p>sudo systemctl -failed<br />\nsudo journalctl -p 3 -xb</p>\n<p>10. Backup the system</p>\n<p>sudo rsync -aAXvP -delete -exclude=/dev/* -exclude=/proc/* -exclude=/sys/* -exclude=/tmp/* -exclude=/run/* -exclude=/mnt/* -exclude=/media/* -exclude=/lost+found -exclude=/home/.ecryptfs / /mnt/backupDestination/</p>\n", "slug": "10-things-to-do-first-in-arch-linux", "date": 1521982523, "cats": [3]}