{"title": "Batch: An API to bundle multiple PayPal REST operations", "content": "<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"ab91\" class=\"graf graf--p graf-after--h3\"><a class=\"markup--anchor markup--p-anchor\" href=\"https://developer.paypal.com/docs/api/overview\" target=\"_blank\" rel=\"nofollow noopener noopener\" data-href=\"https://developer.paypal.com/docs/api/overview\">REST APIs\u00a0</a>are vital business tools that allow merchants, partners and developers to consume and build on top of the various payment capabilities that PayPal provides. Whether it is checkout, recurring payments, vaulting or identity operations there are multiple end to end API interactions involved in each of those business flows.</p>\n<p id=\"15c7\" class=\"graf graf--p graf-after--p\">These APIs are also a critical part of the internal Service Oriented Architecture (SOA) at PayPal. Different domains expose various internal capabilities and operations via REST interfaces using which the PayPal platform orchestrates and processes billions of transactions per day.</p>\n<p id=\"5110\" class=\"graf graf--p graf-after--p\">Earlier this year,\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://www.linkedin.com/in/aniket-pol/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.linkedin.com/in/aniket-pol/\">Aniket Pol</a>\u00a0and I started working on a project that would allow for logical bundling of these different REST API operations into one single API call on an\u00a0<strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">as-needed basis</em></strong>. The primary motivation behind this being; cutting down on the number of API calls between external clients (merchants and developers) and PayPal or between different internal services at PayPal.</p>\n<blockquote id=\"7d7b\" class=\"graf graf--blockquote graf-after--p\"><p>Reducing multiple API calls into a single API call between client and server allows for enormous performance boost as we cut down significantly on the round trip network time.</p></blockquote>\n<p id=\"d71a\" class=\"graf graf--p graf-after--blockquote\">Another common business use case is doing bulk API operations. Often large merchants and marketplaces initiate transactions in bulk where they need to create multiple payments at one go.</p>\n<blockquote id=\"5f72\" class=\"graf graf--blockquote graf-after--p\"><p>There was a need for an interface that allows clients to invoke the same API call with different request contexts multiple times via a single optimized API call. This eliminates the need for the clients to call an API endpoint in bulk and write code at their end to manage parallel and sequential requests.</p></blockquote>\n<p id=\"9f3f\" class=\"graf graf--p graf-after--blockquote\">Enter\u00a0<strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">Batch API\u00a0</em></strong>that facilitates the logical bundling of these multiple REST calls via a simplified interface. This REST API is based on the\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://tools.ietf.org/html/rfc7644\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://tools.ietf.org/html/rfc7644\">IETF SCIM specification</a>\u00a0which provides guidance on how clients can send a large collection of resource operations in a single request. The body of a bulk operation contains a set of HTTP resource operations using one of the HTTP methods supported by the API such as POST, PUT, PATCH, or DELETE.</p>\n<p id=\"6976\" class=\"graf graf--p graf-after--p\">Using this API one can make both\u00a0<strong class=\"markup--strong markup--p-strong\">non-dependent</strong>\u00a0and\u00a0<strong class=\"markup--strong markup--p-strong\">dependent</strong>\u00a0batch requests to the PayPal server.</p>\n<p id=\"f1aa\" class=\"graf graf--p graf-after--p\"><strong class=\"markup--strong markup--p-strong\">Non-dependent batch requests do not support dependencies between batch operations.</strong></p>\n<p id=\"567f\" class=\"graf graf--p graf-after--p\">Non-dependent batch requests contain multiple API operations that are not dependent on each other. For example bulk API operations in which one API endpoint is being called multiple times would be a collection of non-dependent operations.</p>\n</div>\n<div class=\"section-inner sectionLayout--outsetColumn\">\n<figure id=\"a68a\" class=\"graf graf--figure graf--layoutOutsetCenter graf-after--p\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*okfjJcmLRgw0rVkE66xkEw.png\" data-width=\"1776\" data-height=\"398\" data-action=\"zoom\" data-action-value=\"1*okfjJcmLRgw0rVkE66xkEw.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"15\"></canvas><img class=\"alignnone size-full wp-image-1143\" src=\"https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw.png\" width=\"1250\" height=\"280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw.png 1250w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-300x67.png 300w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-768x172.png 768w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-1024x229.png 1024w, https://emolike.net/wp-content/uploads/2018/11/1okfjJcmLRgw0rVkE66xkEw-604x135.png 604w\" sizes=\"(max-width: 1250px) 100vw, 1250px\" /></div>\n</div><figcaption class=\"imageCaption\">Processing a non-dependent batch\u00a0request</figcaption></figure>\n</div>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"6b98\" class=\"graf graf--p graf-after--figure\">The PayPal batch server returns the response of the batch request as a single-wrapped response only after receiving responses for individual independent operations.</p>\n<p id=\"7434\" class=\"graf graf--p graf-after--p\">Here is an example of how a non-dependent batch API request looks like:</p>\n<figure id=\"0c20\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*gHy7IjcoyGLiBYejlS0yiA.png\" data-width=\"1195\" data-height=\"1794\" data-action=\"zoom\" data-action-value=\"1*gHy7IjcoyGLiBYejlS0yiA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"50\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-1144\" src=\"https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA.png\" width=\"852\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA.png 852w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-200x300.png 200w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-768x1154.png 768w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-682x1024.png 682w, https://emolike.net/wp-content/uploads/2018/11/1gHy7IjcoyGLiBYejlS0yiA-180x270.png 180w\" sizes=\"(max-width: 852px) 100vw, 852px\" /></div>\n</div>\n</figure>\n<p id=\"8d86\" class=\"graf graf--p graf-after--figure\">Notice how we can define an array of API operations that are independent of each other and send them in one single request. The batch service handles unwrapping them and executing them in an optimized fashion and returns the response.</p>\n<p id=\"98dd\" class=\"graf graf--p graf-after--p\">The response for a batch operation like this also contains an array of operations with individual response metadata and body for each operation.</p>\n<figure id=\"7087\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*uDlJ11u7s21qA2KqzNxpcg.png\" data-width=\"1729\" data-height=\"3938\" data-action=\"zoom\" data-action-value=\"1*uDlJ11u7s21qA2KqzNxpcg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"33\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-1145\" src=\"https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg.png\" width=\"562\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg.png 562w, https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg-132x300.png 132w, https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg-450x1024.png 450w, https://emolike.net/wp-content/uploads/2018/11/1uDlJ11u7s21qA2KqzNxpcg-119x270.png 119w\" sizes=\"(max-width: 562px) 100vw, 562px\" /></div>\n</div>\n</figure>\n<p id=\"1693\" class=\"graf graf--p graf-after--figure\"><strong class=\"markup--strong markup--p-strong\">Dependent batch requests support dependencies between two operations.</strong></p>\n<p id=\"e931\" class=\"graf graf--p graf-after--p\">Dependent batch requests contain multiple API operations that are dependent on each other. For example, the output of one operation might be passed as input to another operation in the batch request.</p>\n</div>\n<div class=\"section-inner sectionLayout--outsetColumn\">\n<figure id=\"af7c\" class=\"graf graf--figure graf--layoutOutsetCenter graf-after--p\" data-scroll=\"native\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*U8x5Ena2nueGqgKNSW94gg.png\" data-width=\"1734\" data-height=\"496\" data-action=\"zoom\" data-action-value=\"1*U8x5Ena2nueGqgKNSW94gg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"19\"></canvas><img class=\"alignnone size-full wp-image-1146\" src=\"https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg.png\" width=\"1250\" height=\"357\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg.png 1250w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-300x86.png 300w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-768x219.png 768w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-1024x292.png 1024w, https://emolike.net/wp-content/uploads/2018/11/1U8x5Ena2nueGqgKNSW94gg-604x173.png 604w\" sizes=\"(max-width: 1250px) 100vw, 1250px\" /></div>\n</div><figcaption class=\"imageCaption\">Processing a dependent batch\u00a0request</figcaption></figure>\n</div>\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p id=\"5f9c\" class=\"graf graf--p graf-after--figure\">Here is an example of how a dependent batch request looks like:</p>\n<figure id=\"450d\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*hR2zYWAr0b1W51HN4d7_BA.png\" data-width=\"1638\" data-height=\"4143\" data-action=\"zoom\" data-action-value=\"1*hR2zYWAr0b1W51HN4d7_BA.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"29\" height=\"75\"></canvas><img class=\"alignnone size-full wp-image-1147\" src=\"https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA.png\" width=\"506\" height=\"1280\" srcset=\"https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA.png 506w, https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA-119x300.png 119w, https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA-405x1024.png 405w, https://emolike.net/wp-content/uploads/2018/11/1hR2zYWAr0b1W51HN4d7_BA-107x270.png 107w\" sizes=\"(max-width: 506px) 100vw, 506px\" /></div>\n</div>\n</figure>\n<p id=\"71e2\" class=\"graf graf--p graf-after--figure\">Notice how the dependency is defined. The resource Id generated as part of the first operation (defined by operation Id<strong class=\"markup--strong markup--p-strong\">\u200a</strong><em class=\"markup--em markup--p-em\">\u2014\u200af81d4fae-7dec-11d0-a765\u201300a0c91e6bf6</em>) is used as an input to the second dependent operation in the path as\u00a0<em class=\"markup--em markup--p-em\">v1/payments/payment/{bulk_id:f81d4fae-7dec-11d0-a765\u201300a0c91e6bf6}</em><strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">.</em></strong></p>\n<p id=\"1aca\" class=\"graf graf--p graf-after--p\">The batch service takes care of orchestrating the first request and then using the resource Id generated as the result of that in the second operation. This is exactly how a client consuming 2 dependent APIs sequentially would make the calls as well.</p>\n<p id=\"b715\" class=\"graf graf--p graf-after--p\">Currently this API is in pilot mode and supports the batching of only certain PayPal Checkout API operations being used by some of our large partners and we plan on making it gradually available for widespread use. We see promising performance gains with these integrations.</p>\n<p id=\"608e\" class=\"graf graf--p graf-after--p\">Source :\u00a0<a href=\"https://medium.com/paypal-engineering/batch-an-api-to-bundle-multiple-paypal-rest-operations-6af6006e002?\">https://medium.com/paypal-engineering/batch-an-api-to-bundle-multiple-paypal-rest-operations-6af6006e002?</a></p>\n</div>\n", "slug": "batch-an-api-to-bundle-multiple-paypal-rest-operations", "date": 1543418444, "cats": [0, 34, 18, 17]}