{"title": "Building a Serverless Web App on AWS Services", "content": "<h2 data-css-7941k5=\"\">Introduction</h2>\n<div>\n<p>In this tutorial, you\u2019ll learn to build a simple web application using the following AWS Services:</p>\n<ul>\n<li><a href=\"https://aws.amazon.com/dynamodb/\" data-css-1skajya=\"\">AWS DynamoDB</a>\u00a0as the database</li>\n<li><a href=\"https://aws.amazon.com/lambda/\" data-css-1skajya=\"\">AWS Lambda</a>\u00a0to create functions that will read and write from/to the database</li>\n<li><a href=\"https://aws.amazon.com/api-gateway/\" data-css-1skajya=\"\">AWS API Gateway</a>\u00a0to create the REST API that the web application will use</li>\n<li><a href=\"https://aws.amazon.com/s3/\" data-css-1skajya=\"\">AWS S3</a>\u00a0to host the web application</li>\n<li><a href=\"https://aws.amazon.com/cloudfront/\" data-css-1skajya=\"\">AWS CloudFront</a>\u00a0to deliver the web application from a location near to the user\u2019s location.</li>\n</ul>\n<p>Here\u2019s the architecture diagram:</p>\n<p><img class=\"alignnone size-full wp-image-597\" src=\"https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43.png\" alt=\"architecture diagram\" width=\"929\" height=\"519\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43.png 929w, https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43-300x168.png 300w, https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43-768x429.png 768w, https://emolike.net/wp-content/uploads/2018/05/2965d6f2-9e6b-4a3c-855e-97eef7f22c43-483x270.png 483w\" sizes=\"(max-width: 929px) 100vw, 929px\" /></p>\n<p>For the lambda functions, we will use a Node.js runtime environment with the Javascript SDK.</p>\n<p>Everything will be made from the AWS Management Console, without external frameworks, SDK, or command-line interfaces (CLI).</p>\n<h2 data-css-7941k5=\"\">Sample WebApp and Credit</h2>\n<div>\n<p>The sample web app allows you to create/edit/delete courses. This is how it looks like:</p>\n<p style=\"text-align: center;\"><a href=\"http://courses20010.s3-website-us-east-1.amazonaws.com/\">http://courses20010.s3-website-us-east-1.amazonaws.com/</a></p>\n<p style=\"text-align: center;\"><a href=\"https://d1td28opf6foxs.cloudfront.net/\">https://d1td28opf6foxs.cloudfront.net/</a></p>\n<p><img class=\"alignnone size-full wp-image-598\" src=\"https://emolike.net/wp-content/uploads/2018/05/db216707-2ba9-4229-acb7-d2c76ed9413b.gif\" alt=\"demo\" width=\"800\" height=\"450\" /></p>\n<p>It\u2019s a single-page application made with React and Redux. The credit for this application goes to\u00a0<a href=\"https://github.com/ariesmcrae\" data-css-1skajya=\"\">Aries McRae</a>. For this guide, I just modified his\u00a0<a href=\"https://github.com/ariesmcrae/reactjs-crud-boilerplate\" data-css-1skajya=\"\">React CRUD boilerplate</a>.</p>\n<p>You can clone the app from\u00a0<a href=\"https://github.com/eh3rrera/react-app-frontend\" data-css-1skajya=\"\">this GitHub repository</a>\u00a0and test it locally with the included Express server.</p>\n<p>This guide won\u2019t explain how the app is made. So don\u2019t worry if you are unfamiliar with React and Redux, as this tutorial will focus on building the API and setting up all the AWS services.</p>\n<h2 data-css-7941k5=\"\">How it works</h2>\n<div>\n<p>The API works with two data structures,\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">course</code></span>\u00a0and\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">author</code></span>:</p>\n<pre><code data-enlighter-language=\"json\">Course:\r\n{\r\n    id: \"web-components-shadow-dom\",\r\n    title: \"Web Component Fundamentals\",\r\n    watchHref: \"http://www.pluralsight.com/courses/web-components-shadow-dom\",\r\n    authorId: \"cory-house\",\r\n    length: \"5:10\",\r\n    category: \"HTML5\"\r\n}\r\n\r\nAuthor:\r\n{\r\n  id: 'cory-house',\r\n  firstName: 'Cory',\r\n  lastName: 'House'\r\n}</code></pre>\n<p>Of course, you\u2019ll need an AWS account. If you don\u2019t have one,\u00a0<a href=\"https://aws.amazon.com/\" data-css-1skajya=\"\">sign up here</a>. Registration is free, and all the services used in this tutorial are within the\u00a0<a href=\"https://aws.amazon.com/free/\" data-css-1skajya=\"\">AWS Free Tier</a>, but you\u2019ll need to enter a credit card number in case you exceed that free tier.</p>\n<p>The most difficult step is verification, in which an automated system will call you, and you have to enter a PIN code. It doesn\u2019t always work and you may have to ask the support team to call you to verify your account.</p>\n<p>Once you have created your account, you automatically sign up for all services in AWS. However, it\u2019s a good practice to create an admin user instead of using your root account for day-to-day operations. Follow the steps in\u00a0<a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_create-admin-group.html\" data-css-1skajya=\"\">this guide</a>\u00a0to do this.</p>\n<p>Now let\u2019s start by creating the tables to store the app information in DynamoDB.</p>\n<h2 data-css-7941k5=\"\">Storing data in DynamoDB</h2>\n<div>\n<p><strong>DynamoDB</strong>\u00a0is a fully-managed NoSQL database that stores the data in key-value pairs, like a JSON object:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"ID\": 1,\r\n  \"Title\": \"Introduction to Angular 5\",\r\n  \"Category\": \"web-dev\"\r\n}</code></pre>\n<p>There are no schemas so every record can have a different structure. The only restriction is that the field(s) defined as the partition key must be present in all the records.</p>\n<p>Based on this partition key, DynamoDB store data in different drives. An efficient distribution will make accessing the data as fast as possible, so it\u2019s important to choose a good partition key.</p>\n<p>This way, the partition key can become the primary key, but you can also use a combination of a partition key and a sort key as a primary key. For example, if you have multiple records with the same course ID (the partition key), you can add a timestamp as a sort key to form a unique combination. In addition, you can also have secondary indexes for any other field (or combination of fields) to make queries more efficient.</p>\n<p>DynamoDB gives you a lot of options. You can learn more about it in the\u00a0<a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html\" data-css-1skajya=\"\">developer guide</a>, but for now, let\u2019s dive into creating a database for our API.</p>\n<p>Open the\u00a0<em>Services</em>\u00a0menu and choose\u00a0<em>DynamoDB</em>:</p>\n<p><img class=\"alignnone size-full wp-image-599\" src=\"https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c.jpg\" alt=\"choose dynamodb\" width=\"1280\" height=\"829\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-300x194.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-768x497.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-1024x663.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/fa5ffa61-7359-4148-93b0-697f05027e1c-417x270.jpg 417w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Make sure you\u2019re in the correct AWS region (there\u2019s a DynamoDB database per region) and click on\u00a0<em>Create table</em>:</p>\n<p><img class=\"alignnone size-full wp-image-600\" src=\"https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f.jpg\" alt=\"create table\" width=\"1280\" height=\"652\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-300x153.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-768x391.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-1024x522.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/d69fa092-91c9-41bb-bfd4-5cd54a1f3a4f-530x270.jpg 530w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Enter the following information, leave the default settings checked and click on\u00a0<em>Create</em>:</p>\n<ul>\n<li>Table name:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">courses</code></span></li>\n<li>Primary key:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">id</code></span></li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-601\" src=\"https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec.png\" alt=\"course table\" width=\"812\" height=\"496\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec.png 812w, https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec-300x183.png 300w, https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec-768x469.png 768w, https://emolike.net/wp-content/uploads/2018/05/69d43523-55df-4c77-9ace-20d2882ae0ec-442x270.png 442w\" sizes=\"(max-width: 812px) 100vw, 812px\" /></p>\n<p>If you see the following message:</p>\n<p><img class=\"alignnone size-full wp-image-602\" src=\"https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6.png\" alt=\"autoscaling message\" width=\"804\" height=\"108\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6.png 804w, https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6-300x40.png 300w, https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6-768x103.png 768w, https://emolike.net/wp-content/uploads/2018/05/4a52ebad-1df4-4da9-a3ee-34f74d2bf4f6-604x81.png 604w\" sizes=\"(max-width: 804px) 100vw, 804px\" /></p>\n<p>Your AWS account does not currently have the\u00a0<em>DynamoDBAutoscaleRole</em>, but there\u2019s no problem if you\u2019re not going to use the auto-scaling service or if you\u2019re not sure what it is. If you want to use it, follow the documentation link to add the\u00a0<em>AmazonDynamoDBFullAccess</em>\u00a0and a custom inline policy to create the autoscale role automatically when you create a new table with auto scaling the first time, it\u2019s all\u00a0<a href=\"http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.Console.html#AutoScaling.Permissions\" data-css-1skajya=\"\">in the documentation</a>.</p>\n<p>It might take a few seconds, but you should see a confirmation page like the following:</p>\n<p><img class=\"alignnone size-full wp-image-603\" src=\"https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c.png\" alt=\"table created\" width=\"1280\" height=\"608\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c.png 1280w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-768x365.png 768w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-1024x486.png 1024w, https://emolike.net/wp-content/uploads/2018/05/8c343e09-e42d-4300-ac99-9a566777cd3c-568x270.png 568w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Take note of the table\u2019s\u00a0<strong>Amazon Resource Name (ARN)</strong>, you\u2019ll need it later.</p>\n<p>In the\u00a0<em>Items</em>\u00a0tab you can query your table or add items:</p>\n<p><img class=\"alignnone size-full wp-image-604\" src=\"https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d.png\" alt=\"course table items\" width=\"1280\" height=\"612\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d.png 1280w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-768x367.png 768w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-1024x490.png 1024w, https://emolike.net/wp-content/uploads/2018/05/8eb151ac-c6a1-4187-bf3c-cb14a39e644d-565x270.png 565w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>I\u2019m going to leave it empty for now, but I\u2019ll add items to this table when the application is finished. Meanwhile, I\u2019ll go ahead and create a new table for the authors with the following information:</p>\n<ul>\n<li>Table name:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">authors</code></span></li>\n<li>Primary key:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">id</code></span></li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-605\" src=\"https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c.png\" alt=\"authors table\" width=\"820\" height=\"500\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c.png 820w, https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c-300x183.png 300w, https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c-768x468.png 768w, https://emolike.net/wp-content/uploads/2018/05/e1920f70-7383-47d9-866e-bd77207f875c-443x270.png 443w\" sizes=\"(max-width: 820px) 100vw, 820px\" /></p>\n<p>After the table is created, take note of its ARN.</p>\n<p>Now, in the\u00a0<em>Items</em>\u00a0tab, create some authors, for example:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"id\": \"cory-house\",\r\n  \"firstName\": \"Cory\",\r\n  \"lastName\": \"House\"\r\n},\r\n{\r\n  \"id\": \"samer-buma\",\r\n  \"firstName\": \"Samer\",\r\n  \"lastName\": \"Buma\"\r\n},\r\n{\r\n  \"id\": \"deborah-kurata\",\r\n  \"firstName\": \"Deborah\",\r\n  \"lastName\": \"Kurata\"\r\n}</code></pre>\n<p><img class=\"alignnone size-full wp-image-606\" src=\"https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115.png\" alt=\"author item\" width=\"1023\" height=\"488\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115.png 1023w, https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115-300x143.png 300w, https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115-768x366.png 768w, https://emolike.net/wp-content/uploads/2018/05/94ad0045-0ab9-49ec-9201-3d2e8f8b7115-566x270.png 566w\" sizes=\"(max-width: 1023px) 100vw, 1023px\" /></p>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-storingdataindynamodb\" class=\"jsx-360051262\" data-module-id=\"storingdataindynamodb\">\n<div>\n<p>Now let\u2019s create the lambda functions that will use these tables.</p>\n</div>\n</div>\n</div>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-creatinglambdafunctions\" class=\"jsx-360051262\" data-module-id=\"creatinglambdafunctions\">\n<div id=\"module-creatinglambdafunctions-anchor\" class=\"jsx-360051262 anchor\">\n<h2 data-css-7941k5=\"\">Creating lambda functions</h2>\n<div>\n<p><strong>AWS Lambda</strong>\u00a0is a service that allows you to run functions upon certain events, for example, when data is inserted in a DynamoDB table or when a file is uploaded to S3.</p>\n<p>In this case, a lambda function will be run whenever a request hits one of the API endpoints you\u2019ll set up in the next section.</p>\n<p>At the time of this writing, a lambda function can be written in Node.js, Python, Java, or C#. This tutorial will use Node.js.</p>\n<p>You can learn more about AWS Lambda\u00a0<a href=\"http://docs.aws.amazon.com/lambda/latest/dg/welcome.html\" data-css-1skajya=\"\">in the developer documentation</a>.</p>\n<p>We\u2019ll create six lambda functions:</p>\n<ul>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span>\u00a0to return all the users in the database</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-courses</code></span>\u00a0to return all the courses in the database</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-course</code></span>\u00a0to return only one course</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">save-course</code></span>\u00a0to create a new course</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">update-course</code></span>\u00a0to update a course</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">delete-course</code></span>\u00a0to delete a course</li>\n</ul>\n<p>Let\u2019s start by creating the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span>\u00a0function. Open the\u00a0<em>Services</em>\u00a0menu and choose\u00a0<em>Lambda</em>:</p>\n<p><img class=\"alignnone size-full wp-image-607\" src=\"https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a.jpg\" alt=\"AWS lambda\" width=\"1280\" height=\"829\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-300x194.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-768x497.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-1024x663.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/d1cebaa7-d7c7-4b3e-a101-8e604e23889a-417x270.jpg 417w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Click on :Create a function*:</p>\n<p><img class=\"alignnone size-full wp-image-608\" src=\"https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54.jpg\" alt=\"Create function\" width=\"1048\" height=\"312\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54.jpg 1048w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-300x89.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-768x229.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-1024x305.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/a5351ed9-0a44-4152-9204-b1af39fb9a54-604x180.jpg 604w\" sizes=\"(max-width: 1048px) 100vw, 1048px\" /></p>\n<p>And then, with the\u00a0<em>Author from scratch option</em>\u00a0selected, enter the following:</p>\n<ul>\n<li>Name:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span></li>\n<li>Runtime:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Node.js 6.10</code></span>\u00a0(or a superior version)</li>\n<li>Role:\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Create a custom role</code></span></li>\n</ul>\n<p>When selecting the option\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Create a custom role</code></span>, a new window will open to allow you to create a new role.</p>\n<p>Alternatively, you could choose the option\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Create a new role from a template(s)</code></span>\u00a0and choose the policy template\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Simple Microservice permissions</code></span>. This template will give you permissions to read, create, update, and delete items from any table:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"dynamodb:DeleteItem\",\r\n                \"dynamodb:GetItem\",\r\n                \"dynamodb:PutItem\",\r\n                \"dynamodb:Scan\",\r\n                \"dynamodb:UpdateItem\"\r\n            ],\r\n            \"Resource\": \"arn:aws:dynamodb:region:accountId:table/*\"\r\n        }\r\n    ]\r\n}</code></pre>\n<p>However, this is not good practice; custom services should require as few permissions as possible to reduce overhead and maximize privacy and security.</p>\n<p>So in the window to create a new role, enter\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors-lambda-role</code></span>\u00a0as the role name:</p>\n<p><img class=\"alignnone size-full wp-image-609\" src=\"https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734.png\" alt=\"create custom role\" width=\"1244\" height=\"552\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734.png 1244w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-300x133.png 300w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-768x341.png 768w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-1024x454.png 1024w, https://emolike.net/wp-content/uploads/2018/05/635bf59e-4880-4262-a9c3-3e6bff57a734-604x268.png 604w\" sizes=\"(max-width: 1244px) 100vw, 1244px\" /></p>\n<p>At this point, it will only give you permissions to write to the CloudWatch logs, so click on the\u00a0<em>Edit</em>\u00a0link and modify the policy document so it looks like this:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:Scan\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_AUTHORS_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</code></pre>\n<p>Just replace the DynamoDB Scan\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Resource</code></span>\u00a0field with the ARN of your author\u2019s table. This will give you permissions to perform a scan operation to read all the items of the author\u2019s table only.</p>\n<p>Finally, click on the\u00a0<em>Allow</em>\u00a0button.</p>\n<p>Back to the window to create the lambda function, choose the role\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors-lambda-role</code></span>\u00a0in the\u00a0<em>Existing role</em>\u00a0option and click on\u00a0<em>Create function</em>:</p>\n<p><img class=\"alignnone size-full wp-image-610\" src=\"https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2.png\" alt=\"create get all authors function\" width=\"1142\" height=\"516\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2.png 1142w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a78c65a5-4080-4eb7-b70b-52ef0e0354f2-598x270.png 598w\" sizes=\"(max-width: 1142px) 100vw, 1142px\" /></p>\n<p>After the lambda function is created, scroll down to the\u00a0<em>Function code</em>section:</p>\n<p><img class=\"alignnone size-full wp-image-611\" src=\"https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509.png\" alt=\"function code\" width=\"1140\" height=\"572\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509.png 1140w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-300x151.png 300w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-768x385.png 768w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-1024x514.png 1024w, https://emolike.net/wp-content/uploads/2018/05/deda3127-d6c8-4ba7-9fcd-a6255816a509-538x270.png 538w\" sizes=\"(max-width: 1140px) 100vw, 1140px\" /></p>\n<p>Enter the following code:</p>\n<pre><code data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    TableName: \"authors\"\r\n  };\r\n  dynamodb.scan(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, data);\r\n    }\r\n  });\r\n};</code></pre>\n<p>First, you require the AWS SDK and create a DynamoDB instance passing the code of the region where the database is located, for example\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">us-east-2</code></span>\u00a0for Ohio (find out your region code\u00a0<a href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions\" data-css-1skajya=\"\">here</a>), and the API version (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">2012-08-10</code></span>\u00a0is the latest at the time of writing this tutorial).</p>\n<p>The exported function receives three parameters:</p>\n<ul>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">event</code></span>\u00a0\u2014\u00a0an object that is used to pass data to the handler.</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">context</code></span>\u2014\u00a0an object that provides runtime information about the Lambda function being executed.</li>\n<li><span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">callback</code></span>\u2014\u00a0a function to return information to the caller (if it\u2019s called, otherwise the return value is\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">null</code></span>). The callback takes two parameters:\n<ul>\n<li>error\u00a0\u2014\u00a0an object that provides the result of a failed execution. When a Lambda function succeeds, you can pass null as the first parameter.</li>\n<li>result\u00a0\u2014\u00a0an object that provides the result of a successful execution. The result provided must be\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">JSON.stringify</code></span>-compatible. If an error is provided, this parameter is ignored.</li>\n</ul>\n</li>\n</ul>\n<p>Inside the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">handler</code></span>\u00a0function, you execute a\u00a0<a href=\"http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB.html#scan-property\" data-css-1skajya=\"\">scan</a>\u00a0operation to get all the items of the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">authors</code></span>\u00a0table.</p>\n<p>Any error that occurs is passed to the callback function. Otherwise, the callback is executed passing the data returned.</p>\n<p>Keep in mind that the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">scan</code></span>\u00a0operation will return up to one MB of data. If there is more data available, a\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">LastEvaluatedKey</code></span>\u00a0value is included in the results along with the number of items exceeding the limit to continue the scan in a subsequent operation.</p>\n<p>You can know more about the available methods of the AWS Javascript SDK for DynamoDB in the\u00a0<a href=\"http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB.html\" data-css-1skajya=\"\">API documentation</a>.</p>\n<p>Now click\u00a0<em>Save</em>. Then, if you click on the\u00a0<em>Test</em>\u00a0button, a window to configure some input properties will open:</p>\n<p><img class=\"alignnone size-full wp-image-612\" src=\"https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca.png\" alt=\"test event\" width=\"806\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca.png 806w, https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca-300x215.png 300w, https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca-768x551.png 768w, https://emolike.net/wp-content/uploads/2018/05/1ad8439c-310e-4b69-a024-f57f43cdc3ca-377x270.png 377w\" sizes=\"(max-width: 806px) 100vw, 806px\" /></p>\n<p>This function does not take any parameters so give it a name and just click on\u00a0<em>Create</em>\u00a0and then on\u00a0<em>Test</em>\u00a0one more time.</p>\n<p>You can check the execution results at the top of the page:</p>\n<p><img class=\"alignnone size-full wp-image-613\" src=\"https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6.png\" alt=\"test results\" width=\"1122\" height=\"510\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6.png 1122w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-768x349.png 768w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a083335c-12ce-47f8-af15-7280b912b2e6-594x270.png 594w\" sizes=\"(max-width: 1122px) 100vw, 1122px\" /></p>\n<p>Or in the\u00a0<em>Execution Results</em>\u00a0tab below the code editor:</p>\n<p><img class=\"alignnone size-full wp-image-614\" src=\"https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f.png\" alt=\"test results\" width=\"1150\" height=\"642\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f.png 1150w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-300x167.png 300w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-768x429.png 768w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-1024x572.png 1024w, https://emolike.net/wp-content/uploads/2018/05/372b657a-f680-4d8b-aec3-03b62c6c5f8f-484x270.png 484w\" sizes=\"(max-width: 1150px) 100vw, 1150px\" /></p>\n<p>This is a sample output:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"Items\": [\r\n    {\r\n      \"id\": {\r\n        \"S\": \"cory-house\"\r\n      },\r\n      \"firstName\": {\r\n        \"S\": \"Cory\"\r\n      },\r\n      \"lastName\": {\r\n        \"S\": \"House\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": {\r\n        \"S\": \"samer-buma\"\r\n      },\r\n      \"firstName\": {\r\n        \"S\": \"Samer\"\r\n      },\r\n      \"lastName\": {\r\n        \"S\": \"Buma\"\r\n      }\r\n    },\r\n    {\r\n      \"id\": {\r\n        \"S\": \"deborah-kurata\"\r\n      },\r\n      \"firstName\": {\r\n        \"S\": \"Deborah\"\r\n      },\r\n      \"lastName\": {\r\n        \"S\": \"Kurata\"\r\n      }\r\n    }\r\n  ],\r\n  \"Count\": 3,\r\n  \"ScannedCount\": 3\r\n}</code></pre>\n<p>As you can see, every key/value pair inside\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Items</code></span>\u00a0also contains the type (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">S</code></span>\u00a0for\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">String</code></span>), so let\u2019s modify the format with a\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">map</code></span>\u00a0function to only return the key and the value for each item.</p>\n<p>Replace the code of the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">else</code></span>\u00a0block inside the callback function of\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">scan</code></span>\u00a0with the following:</p>\n<pre><code data-enlighter-language=\"js\">// ...\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n    ...\r\n    dynamodb.scan(params, (err, data) =&gt; {\r\n      if(err) {\r\n        ...\r\n      } else {\r\n        const authors = data.Items.map(item =&gt; {\r\n          return { id: item.id.S, firstName: item.firstName.S, lastName: item.lastName.S };\r\n        });\r\n        callback(null, authors);\r\n      }\r\n    });\r\n};</code></pre>\n<p>If you save and then test the function once again, you\u2019ll get as result a much cleaner object:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">[\r\n  {\r\n    id: \"cory-house\",\r\n    firstName: \"Cory\",\r\n    lastName: \"House\"\r\n  },\r\n  {\r\n    id: \"samer-buma\",\r\n    firstName: \"Samer\",\r\n    lastName: \"Buma\"\r\n  },\r\n  {\r\n    id: \"deborah-kurata\",\r\n    firstName: \"Deborah\",\r\n    lastName: \"Kurata\"\r\n  }\r\n];</code></pre>\n<p>Now follow the\u00a0<em>Functions</em>\u00a0link at the top of the page. Your function should appear on the dashboard:</p>\n<p><img class=\"alignnone size-full wp-image-615\" src=\"https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a.png\" alt=\"functions dashboard\" width=\"1152\" height=\"264\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a.png 1152w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-300x69.png 300w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-768x176.png 768w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-1024x235.png 1024w, https://emolike.net/wp-content/uploads/2018/05/3a63f2dd-91b3-4fb8-b127-1d37788b4c5a-604x138.png 604w\" sizes=\"(max-width: 1152px) 100vw, 1152px\" /></p>\n<p>Next, we need to create the rest of the functions with their corresponding roles and policies. Of course, you can create one role with a full access policy and use it for all your functions, but remember, that is not the recommended approach. Custom roles that minimize the number of permissions are better in the long run.</p>\n<p>You can also create the policies and roles from the Identity and Access Management (IAM) console with the visual editor, first creating a policy with required permission and then creating the role that will contain that policy.</p>\n<p>But probably it\u2019s faster to enter the policy manually and have AWS create both the policy and the role for you. So here are the policies and the code for each function.</p>\n<p>The policy to create a new course:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:PutItem\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</code></pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">save-course</code></span>):</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nconst replaceAll = (str, find, replace) =&gt; {\r\n  return str.replace(new RegExp(find, \"g\"), replace);\r\n};\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const id = replaceAll(event.title, \" \", \"-\").toLowerCase();\r\n  const params = {\r\n    Item: {\r\n      id: {\r\n        S: id\r\n      },\r\n      title: {\r\n        S: event.title\r\n      },\r\n      watchHref: {\r\n        S: `http://www.pluralsight.com/courses/${id}`\r\n      },\r\n      authorId: {\r\n        S: event.authorId\r\n      },\r\n      length: {\r\n        S: event.length\r\n      },\r\n      category: {\r\n        S: event.category\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.putItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, {\r\n        id: params.Item.id.S,\r\n        title: params.Item.title.S,\r\n        watchHref: params.Item.watchHref.S,\r\n        authorId: params.Item.authorId.S,\r\n        length: params.Item.length.S,\r\n        category: params.Item.category.S\r\n      });\r\n    }\r\n  });\r\n};</code></pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:10\",\r\n  \"category\": \"HTML5\"\r\n}</code></pre>\n<p>To update a course we\u2019re also going to use the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">putItem</code></span>\u00a0operation so the policy is the same and you can reuse the role of the previous function.</p>\n<p>The code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">update-course</code></span>) is also similar, with the only difference being that the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">id</code></span>\u00a0and\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">watchHref</code></span>\u00a0fields are not generated:</p>\n<pre><code data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    Item: {\r\n      id: {\r\n        S: event.id\r\n      },\r\n      title: {\r\n        S: event.title\r\n      },\r\n      watchHref: {\r\n        S: event.watchHref\r\n      },\r\n      authorId: {\r\n        S: event.authorId\r\n      },\r\n      length: {\r\n        S: event.length\r\n      },\r\n      category: {\r\n        S: event.category\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.putItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, {\r\n        id: params.Item.id.S,\r\n        title: params.Item.title.S,\r\n        watchHref: params.Item.watchHref.S,\r\n        authorId: params.Item.authorId.S,\r\n        length: params.Item.length.S,\r\n        category: params.Item.category.S\r\n      });\r\n    }\r\n  });\r\n};\r\n</code></pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n  \"id\": \"web-component-fundamentals\",\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:03\",\r\n  \"category\": \"HTML5\",\r\n  \"watchHref\": \"http://www.pluralsight.com/courses/web-components-shadow-dom\"\r\n}</code></pre>\n<p>The policy to get all the courses:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:Scan\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</code></pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-courses</code></span>):</p>\n<pre><code data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.scan(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      const courses = data.Items.map(item =&gt; {\r\n        return {\r\n          id: item.id.S,\r\n          title: item.title.S,\r\n          watchHref: item.watchHref.S,\r\n          authorId: item.authorId.S,\r\n          length: item.length.S,\r\n          category: item.category.S\r\n        };\r\n      });\r\n      callback(null, courses);\r\n    }\r\n  });\r\n};</code></pre>\n<p>The policy to get one course:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:GetItem\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</code></pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-course</code></span>):</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    Key: {\r\n      id: {\r\n        S: event.id\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.getItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, {\r\n        id: data.Item.id.S,\r\n        title: data.Item.title.S,\r\n        watchHref: data.Item.watchHref.S,\r\n        authorId: data.Item.authorId.S,\r\n        length: data.Item.length.S,\r\n        category: data.Item.category.S\r\n      });\r\n    }\r\n  });\r\n};</code></pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n  \"id\": \"web-component-fundamentals\"\r\n}</code></pre>\n<p>The policy to delete a course:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n    \"Version\": \"2012-10-17\",\r\n    \"Statement\": [\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": [\r\n                \"logs:CreateLogGroup\",\r\n                \"logs:CreateLogStream\",\r\n                \"logs:PutLogEvents\"\r\n            ],\r\n            \"Resource\": \"arn:aws:logs:*:*:*\"\r\n        },\r\n        {\r\n            \"Effect\": \"Allow\",\r\n            \"Action\": \"dynamodb:DeleteItem\",\r\n            \"Resource\": \"&lt;YOUR_ARN_FOR_THE_COURSES_TABLE&gt;\"\r\n        }\r\n    ]\r\n}</code></pre>\n<p>And the code for the corresponding lambda function (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">delete-course</code></span>):</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"js\">const AWS = require(\"aws-sdk\");\r\nconst dynamodb = new AWS.DynamoDB({\r\n  region: \"&lt;YOUR_AWS_REGION_CODE&gt;\",\r\n  apiVersion: \"2012-08-10\"\r\n});\r\n\r\nexports.handler = (event, context, callback) =&gt; {\r\n  const params = {\r\n    Key: {\r\n      id: {\r\n        S: event.id\r\n      }\r\n    },\r\n    TableName: \"courses\"\r\n  };\r\n  dynamodb.deleteItem(params, (err, data) =&gt; {\r\n    if (err) {\r\n      console.log(err);\r\n      callback(err);\r\n    } else {\r\n      callback(null, data);\r\n    }\r\n  });\r\n};</code></pre>\n<p>To test this function, you can configure a test event with the following data:</p>\n<div class=\"root\">\n<pre><code data-enlighter-language=\"json\">{\r\n  \"id\": \"web-component-fundamentals\"\r\n}</code></pre>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-creatinglambdafunctions\" class=\"jsx-360051262\" data-module-id=\"creatinglambdafunctions\">\n<div>\n<p>And these are all the functions you\u2019ll need. Now let\u2019s expose them to the world via a REST API.</p>\n</div>\n</div>\n</div>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-settingupapigateway\" class=\"jsx-360051262\" data-module-id=\"settingupapigateway\">\n<div id=\"module-settingupapigateway-anchor\" class=\"jsx-360051262 anchor\">\n<h2 data-css-7941k5=\"\">Setting up API Gateway</h2>\n<div>\n<p><strong>API Gateway</strong>\u00a0is a service that allows creating a REST API fully managed by AWS that acts as the front-end for other services.</p>\n<p>Open the\u00a0<em>Services</em>\u00a0menu and choose\u00a0<em>API Gateway</em>:</p>\n<p><img class=\"alignnone size-full wp-image-616\" src=\"https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47.png\" alt=\"choose API Gateway\" width=\"1216\" height=\"896\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47.png 1216w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-300x221.png 300w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-768x566.png 768w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-1024x755.png 1024w, https://emolike.net/wp-content/uploads/2018/05/3f43e391-df86-46d5-8945-26b297e2dc47-366x270.png 366w\" sizes=\"(max-width: 1216px) 100vw, 1216px\" /></p>\n<p>Press\u00a0<em>Get started</em>:</p>\n<p><img class=\"alignnone size-full wp-image-617\" src=\"https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85.jpg\" alt=\"API Gateway\" width=\"1280\" height=\"612\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85.jpg 1280w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-300x143.jpg 300w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-768x367.jpg 768w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-1024x490.jpg 1024w, https://emolike.net/wp-content/uploads/2018/05/7e777907-b340-40b1-b297-9d41a78fcc85-565x270.jpg 565w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>You can create an API with a\u00a0<a href=\"https://swagger.io/\" data-css-1skajya=\"\">Swagger</a>\u00a0file here we\u2019re going to create the API manually, so choose to create a\u00a0<em>New API</em>\u00a0and give it a name:</p>\n<p><img class=\"alignnone size-full wp-image-618\" src=\"https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a.png\" alt=\"create new API\" width=\"1274\" height=\"508\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a.png 1274w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-300x120.png 300w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-768x306.png 768w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-1024x408.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a2bb37b3-e0d7-46bf-a227-2dcb4b2afc8a-604x241.png 604w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>This will create a new API and you\u2019ll be ready to start adding resources (URL paths) and methods (GET, POST, etc.):</p>\n<p><img class=\"alignnone size-full wp-image-619\" src=\"https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b.png\" alt=\"API created\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b.png 1276w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/b6298e2b-5aeb-4e95-93c3-8e796140159b-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Now open the\u00a0<em>Actions</em>\u00a0menu and choose\u00a0<em>Create Resource</em>. Enter a resource name and check the option\u00a0<em>Enable API Gateway CORS</em>:</p>\n<p><img class=\"alignnone size-full wp-image-620\" src=\"https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb.png\" alt=\"create resource\" width=\"1276\" height=\"533\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb.png 1276w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-300x125.png 300w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-768x321.png 768w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-1024x428.png 1024w, https://emolike.net/wp-content/uploads/2018/05/62fa35bb-6005-4d40-8303-9d16637e5cbb-604x252.png 604w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>By default, the URL path will be created from the resource name.\u00a0<a href=\"https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\" data-css-1skajya=\"\">Cross-origin resource sharing</a>\u00a0(CORS) is a mechanism that allows a web page to request resources hosted in another domain (which is going to be our case here). With this mechanism, the server sends some headers to tell the application that is OK to access the resources on that different server.</p>\n<p>Next, click on\u00a0<em>Create Resource</em>:</p>\n<p><img class=\"alignnone size-full wp-image-621\" src=\"https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7.png\" alt=\"resource created\" width=\"1274\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7.png 1274w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/cd5adccc-59bb-49f0-b17c-433c8bdaeea7-597x270.png 597w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>An\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">Options</code></span>\u00a0endpoint is created because the client sends a preflight request to see if the resource is available and if it contains the CORS headers:</p>\n<p><img class=\"alignnone size-full wp-image-622\" src=\"https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d.png\" alt=\"CORS created\" width=\"1274\" height=\"638\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d.png 1274w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-768x385.png 768w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-1024x513.png 1024w, https://emolike.net/wp-content/uploads/2018/05/16006d4f-3698-4229-989c-30002b11e67d-539x270.png 539w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Now to start adding methods to the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses</code></span>\u00a0endpoint, select it (don\u2019t select the root\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/</code></span>\u00a0endpoint), open the\u00a0<em>Actions</em>\u00a0menu and click on\u00a0<em>Create Method</em>\u00a0option:</p>\n<p><img class=\"alignnone size-full wp-image-623\" src=\"https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac.png\" alt=\"create method\" width=\"1274\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac.png 1274w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/05/cb44ed0f-d5b7-44e4-a06c-3c35781fa5ac-595x270.png 595w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>We\u2019re going to start with the POST method, so select this option and click on the check icon next to the menu to set up the method:</p>\n<p><img class=\"alignnone size-full wp-image-624\" src=\"https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09.png\" alt=\"create POST\" width=\"1276\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09.png 1276w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2018/05/c133012a-be4b-4592-ad21-7c80c024de09-596x270.png 596w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>As the\u00a0<em>Integration type</em>\u00a0choose\u00a0<em>Lambda Function</em>, then the region where you created your lambda functions, and enter the name of the function that will be associated to this method (<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">save-course</code></span>):</p>\n<p><img class=\"alignnone size-full wp-image-625\" src=\"https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8.png\" alt=\"set up POST\" width=\"1274\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8.png 1274w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a48178d9-ad7c-4a61-9f04-7384dbfee2a8-597x270.png 597w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Confirm the permission to invoke the lambda function:</p>\n<p><img class=\"alignnone size-full wp-image-626\" src=\"https://emolike.net/wp-content/uploads/2018/05/e3cbaf9c-f34e-464b-a500-df33908e97ba.png\" alt=\"give permissions\" width=\"590\" height=\"232\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/e3cbaf9c-f34e-464b-a500-df33908e97ba.png 590w, https://emolike.net/wp-content/uploads/2018/05/e3cbaf9c-f34e-464b-a500-df33908e97ba-300x118.png 300w\" sizes=\"(max-width: 590px) 100vw, 590px\" /></p>\n<p>By default, API Gateway will pass the request body to the lambda function and return to the client the object returned by the lambda function. Since the client is going to send exactly what the lambda function expects and the lambda function is going to do the same, there\u2019s no need to configure any request or response\u00a0<a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-mappings\" data-css-1skajya=\"\">body mapping templates</a>.</p>\n<p>However, probably it\u2019s a good idea to use a\u00a0<a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html#models-mappings-models\" data-css-1skajya=\"\"><strong>model</strong></a>\u00a0to validate the request.</p>\n<p>So go to the\u00a0<em>Models</em>\u00a0section and click on\u00a0<em>Create</em>:</p>\n<p><img class=\"alignnone size-full wp-image-627\" src=\"https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9.png\" alt=\"create model\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9.png 1276w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/daf44629-382f-4539-b5ab-ea1437cd18c9-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Give it a name, enter\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">application/json</code></span>\u00a0as the\u00a0<em>Content type</em>, and as the model schema, enter the following:</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"$schema\": \"http://json-schema.org/schema#\",\r\n  \"title\": \"CourseInputModel\",\r\n  \"type\": \"object\",\r\n  \"properties\": {\r\n    \"title\": {\"type\": \"string\"},\r\n    \"authorId\": {\"type\": \"string\"},\r\n    \"length\": {\"type\": \"string\"},\r\n    \"category\": {\"type\": \"string\"}\r\n  },\r\n  \"required\": [\"title\", \"authorId\", \"length\", \"category\"]\r\n}</code></pre>\n<p>Models use the\u00a0<a href=\"http://json-schema.org/\" data-css-1skajya=\"\">JSON Schema specification</a>. You can learn more about it\u00a0<a href=\"https://spacetelescope.github.io/understanding-json-schema/\" data-css-1skajya=\"\">here</a>.</p>\n<p>Click on\u00a0<em>Create model</em>\u00a0and back to the POST method click on\u00a0<em>Method Request</em>:</p>\n<p><img class=\"alignnone size-full wp-image-628\" src=\"https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0.png\" alt=\"Method Request\" width=\"1244\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0.png 1244w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-300x139.png 300w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-768x357.png 768w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-1024x476.png 1024w, https://emolike.net/wp-content/uploads/2018/05/51e91374-ec4f-4d0f-9bbb-bf4861d1fcc0-581x270.png 581w\" sizes=\"(max-width: 1244px) 100vw, 1244px\" /></p>\n<p>In\u00a0<em>Request Validator</em>\u00a0choose the option\u00a0<em>Validate body</em>, in the\u00a0<em>Request Body</em>\u00a0section add the model for the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">application/json</code></span>\u00a0content type and confirm all these choices:</p>\n<p><img class=\"alignnone size-full wp-image-629\" src=\"https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5.png\" alt=\"add model\" width=\"1276\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5.png 1276w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2018/05/baf5ce67-c12d-41df-808e-b646490740d5-596x270.png 596w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Now if you click on\u00a0<em>TEST</em>:</p>\n<p><img class=\"alignnone size-full wp-image-630\" src=\"https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9.png\" alt=\"test\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9.png 1276w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/246d3bf6-a546-4272-a432-0c06e7bf93a9-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>You can test the POST endpoint by entering a request body like:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:03\",\r\n  \"category\": \"HTML5\"\r\n}</code></pre>\n<p> </p>\n<p>Everything should work correctly:</p>\n<p><img class=\"alignnone size-full wp-image-631\" src=\"https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797.png\" alt=\"test result\" width=\"1272\" height=\"644\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797.png 1272w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-300x152.png 300w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-768x389.png 768w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-1024x518.png 1024w, https://emolike.net/wp-content/uploads/2018/05/2b8dcb3f-9705-4f78-bbdc-1d4da1873797-533x270.png 533w\" sizes=\"(max-width: 1272px) 100vw, 1272px\" /></p>\n<p>If you remove one or more attributes of the request, an error should be returned:</p>\n<p><img class=\"alignnone size-full wp-image-632\" src=\"https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d.png\" alt=\"test result error\" width=\"1276\" height=\"638\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d.png 1276w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-768x384.png 768w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-1024x512.png 1024w, https://emolike.net/wp-content/uploads/2018/05/1573ae4e-886e-4589-ab04-a0cd8089fb3d-540x270.png 540w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Moving on, we are also going to need a path like\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">courses/web-component-fundamentals</code></span>, where\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">web-component-fundamentals</code></span>\u00a0corresponds to the ID of the course we want to update, delete or select one course.</p>\n<p>Select the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">course</code></span>\u00a0resource and from the\u00a0<em>Actions</em>\u00a0menu, create another resource, this time just adding a path variable using brackets (and enabling CORS):</p>\n<p><img class=\"alignnone size-full wp-image-633\" src=\"https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4.png\" alt=\"ID path\" width=\"1274\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4.png 1274w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-1024x463.png 1024w, https://emolike.net/wp-content/uploads/2018/05/2cf483e9-7644-487f-a5fd-21cc46f50ef4-597x270.png 597w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Click on\u00a0<em>Create resource</em>\u00a0to create it:</p>\n<p><img class=\"alignnone size-full wp-image-634\" src=\"https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57.png\" alt=\"ID path created\" width=\"1276\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57.png 1276w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-1024x464.png 1024w, https://emolike.net/wp-content/uploads/2018/05/e013c99c-74d4-44d8-8f85-6f1407576f57-596x270.png 596w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Next, create a PUT method and link it to the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">update-course</code></span>\u00a0lambda function:</p>\n<p><img class=\"alignnone size-full wp-image-635\" src=\"https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2.png\" alt=\"update method\" width=\"1274\" height=\"574\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2.png 1274w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-768x346.png 768w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-1024x461.png 1024w, https://emolike.net/wp-content/uploads/2018/05/ab282cb6-317c-42be-97bf-dfe29aff6cd2-599x270.png 599w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Now the thing with this operation is that the ID of the course is in the URL, and the rest of the attributes are in the request body.</p>\n<p>In this case, we\u2019ll have to use a\u00a0<strong>body mapping template</strong>\u00a0to send all the information as the lambda function requires it.</p>\n<p>So select the PUT method and click on\u00a0<em>Integration Request</em>:</p>\n<p><img class=\"alignnone size-full wp-image-636\" src=\"https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48.png\" alt=\"Integration Request\" width=\"1274\" height=\"578\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48.png 1274w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-300x136.png 300w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-768x348.png 768w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-1024x465.png 1024w, https://emolike.net/wp-content/uploads/2018/05/59d6055e-476c-4642-8699-d832f32e7d48-595x270.png 595w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>Then, in the\u00a0<em>Body Mapping Templates</em>\u00a0section, choose the option\u00a0<em>When there are no templates defined</em>, add a mapping template for the content-type\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">application/json</code></span>, click on the check icon next to it, and enter the following template:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"id\": $input.params('id'),\r\n  \"title\" : $input.json('$.title'),\r\n  \"authorId\" : $input.json('$.authorId'),\r\n  \"length\" : $input.json('$.length'),\r\n  \"category\" : $input.json('$.category'),\r\n  \"watchHref\" : $input.json('$.watchHref')\r\n}</code></pre>\n<p>The mapping template uses the\u00a0<a href=\"http://velocity.apache.org/engine/devel/vtl-reference-guide.html\" data-css-1skajya=\"\">Velocity Template Language</a>\u00a0(VTL).\u00a0<a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/models-mappings.html\" data-css-1skajya=\"\">Here\u2019s the link</a>\u00a0to the relevant section in the AWS documentation.</p>\n<p>The\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input</code></span>\u00a0variable gives you access to all the request data, while\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input.params()</code></span>\u00a0to the request parameters from the path, query string, or headers (in that order) and\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input.json()</code></span>\u00a0returns a JSON string from the request body. You can know more about the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">$input</code></span>variable and their functions\u00a0<a href=\"http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html#input-variable-reference\" data-css-1skajya=\"\">here</a>.</p>\n<p>Also, notice that the ID has to be \u201cconverted\u201d to a string by enclosing it in quotation marks, while the rest of the data since it\u2019s already sent as a string, don\u2019t have to be converted.</p>\n<p>Click\u00a0<em>Save</em>\u00a0and test it with the path variable\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">web-component-fundamentals</code></span>\u00a0(assuming the record exists in your database) and the following request body:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"title\": \"Web Component Fundamentals\",\r\n  \"authorId\": \"cory-house\",\r\n  \"length\": \"5:03\",\r\n  \"category\": \"HTML5\",\r\n  \"watchHref\": \"http://www.pluralsight.com/courses/web-components-shadow-dom\"\r\n}</code></pre>\n<p>Everything should work correctly:</p>\n<p><img class=\"alignnone size-full wp-image-637\" src=\"https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a.png\" alt=\"test result\" width=\"1274\" height=\"644\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a.png 1274w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-300x152.png 300w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-768x388.png 768w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-1024x518.png 1024w, https://emolike.net/wp-content/uploads/2018/05/dce6e938-660d-4b90-b68b-2050600d375a-534x270.png 534w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>If you like, add a model to validate the request, just like in the case of the POST method.</p>\n<p>Now, applying what you have learned, create a DELETE and GET method on the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses/{id}</code></span>\u00a0resource, linking them to the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">delete-course</code></span>\u00a0and\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-course</code></span>\u00a0functions and passing only the ID with the following template:</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"id\": \"$input.params('id')\"\r\n}</code></pre>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-settingupapigateway\" class=\"jsx-360051262\" data-module-id=\"settingupapigateway\">\n<div>\n<p>Don\u2019t forget to add a GET method on the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses</code></span>\u00a0resource for the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-courses</code></span>\u00a0function.</p>\n<p>And another resource,\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/authors</code></span>, for the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">get-all-authors</code></span>\u00a0function.</p>\n<p>When you\u2019re done, you should have something like this:</p>\n<p><img class=\"alignnone size-full wp-image-638\" src=\"https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293.png\" alt=\"final API\" width=\"1044\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293.png 1044w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-300x166.png 300w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-768x424.png 768w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-1024x565.png 1024w, https://emolike.net/wp-content/uploads/2018/05/793a1b14-c07d-4929-a65f-9e43156ce293-489x270.png 489w\" sizes=\"(max-width: 1044px) 100vw, 1044px\" /></p>\n</div>\n</div>\n</div>\n<div class=\"jsx-975935349 root guide-section\">\n<div id=\"module-crossoriginresourcesharingcors\" class=\"jsx-360051262\" data-module-id=\"crossoriginresourcesharingcors\">\n<div id=\"module-crossoriginresourcesharingcors-anchor\" class=\"jsx-360051262 anchor\"></div>\n<h2 data-css-7941k5=\"\">Cross Origin Resource Sharing (CORS)</h2>\n<div>\n<p>Now, we need to add the CORS header to all the methods (the CORS option you chose when creating a resource only adds the CORS headers for the preflight request).</p>\n<p>Select the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/authors</code></span>\u00a0endpoint, click on\u00a0<em>Actions</em>\u00a0and choose\u00a0<em>Enable CORS</em>:</p>\n<p><img class=\"alignnone size-full wp-image-639\" src=\"https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721.png\" alt=\"Enable CORS\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721.png 1276w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/80f33973-cf78-4544-bad3-3592ac408721-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Deselect the OPTIONS method, click on\u00a0<em>Enable CORS and replace existing CORS headers</em>:</p>\n<p><img class=\"alignnone size-full wp-image-640\" src=\"https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125.png\" alt=\"Enable CORS\" width=\"1274\" height=\"574\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125.png 1274w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-768x346.png 768w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-1024x461.png 1024w, https://emolike.net/wp-content/uploads/2018/05/f1d8921c-73b7-4992-9c1f-697ee570a125-599x270.png 599w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>And confirm to add the CORS headers to the GET method:</p>\n<p><img class=\"alignnone size-full wp-image-641\" src=\"https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9.png\" alt=\"Confirm CORS\" width=\"886\" height=\"256\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9.png 886w, https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9-300x87.png 300w, https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9-768x222.png 768w, https://emolike.net/wp-content/uploads/2018/05/67e00c25-e88f-4f6c-92f5-95a186df7ed9-604x175.png 604w\" sizes=\"(max-width: 886px) 100vw, 886px\" /></p>\n<p>Do the same for all the methods of the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses</code></span>\u00a0and\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">/courses/{id}</code></span>resources (except for the OPTIONS method).</p>\n<p>Finally, to deploy the API, go to the\u00a0<em>Actions</em>\u00a0menu and choose\u00a0<em>Deploy API</em>:</p>\n<p><img class=\"alignnone size-full wp-image-642\" src=\"https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789.png\" alt=\"Deploy options\" width=\"1276\" height=\"576\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789.png 1276w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-300x135.png 300w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-768x347.png 768w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-1024x462.png 1024w, https://emolike.net/wp-content/uploads/2018/05/bca2e844-9149-4c0e-8f4c-d6e1a00d7789-598x270.png 598w\" sizes=\"(max-width: 1276px) 100vw, 1276px\" /></p>\n<p>Then, create a new stage, give it a name, optionally a description and click on\u00a0<em>Deploy</em>:</p>\n<p><img class=\"alignnone size-full wp-image-643\" src=\"https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e.png\" alt=\"create new stage\" width=\"590\" height=\"392\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e.png 590w, https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e-300x199.png 300w, https://emolike.net/wp-content/uploads/2018/05/aeb07977-a49e-43d4-8de4-4d800fba073e-406x270.png 406w\" sizes=\"(max-width: 590px) 100vw, 590px\" /></p>\n<p>After the API is deployed, you\u2019ll get the URL to invoke it:</p>\n<p><img class=\"alignnone size-full wp-image-644\" src=\"https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc.png\" alt=\"API deployed\" width=\"1274\" height=\"556\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc.png 1274w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-300x131.png 300w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-768x335.png 768w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-1024x447.png 1024w, https://emolike.net/wp-content/uploads/2018/05/65256df6-58ae-4e27-97ce-10182ce724cc-604x264.png 604w\" sizes=\"(max-width: 1274px) 100vw, 1274px\" /></p>\n<p>For example, in my case, the root URL of my API is\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">https://hcqxdqvii3.execute-api.us-east-2.amazonaws.com/v1</code></span>and to get the course with ID\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">web-component-fundamentals</code></span>, I\u2019ll have to use the URL\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">https://hcqxdqvii3.execute-api.us-east-2.amazonaws.com/v1/courses/web-component-fundamentals</code></span>.</p>\n<p>At this point, you can use\u00a0<a href=\"https://curl.haxx.se/\" data-css-1skajya=\"\">curl</a>\u00a0or\u00a0<a href=\"https://www.getpostman.com/\" data-css-1skajya=\"\">Postman</a>\u00a0to test the API:</p>\n<p><img class=\"alignnone size-full wp-image-645\" src=\"https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38.png\" alt=\"Postman\" width=\"1280\" height=\"720\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38.png 1280w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-768x432.png 768w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-1024x576.png 1024w, https://emolike.net/wp-content/uploads/2018/05/3f9c97ad-688c-40c9-b326-f32f8b202d38-480x270.png 480w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Now, the only step missing is uploading a client app for our API to S3.</p>\n<h2 data-css-7941k5=\"\">Hosting the app in S3</h2>\n<div>\n<p>Clone the app from\u00a0<a href=\"https://github.com/eh3rrera/react-app-frontend\" data-css-1skajya=\"\">this GitHub repository</a>.</p>\n<p>In a terminal window, go to the app directory and execute\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">npm install</code></span>\u00a0to install the dependencies.</p>\n<p>Next, go to\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">src/api/serverUrl.js</code></span>, and replace the exported value with the URL of your API.</p>\n<p>If you want to test it locally, execute\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">npm start</code></span>\u00a0on the terminal.</p>\n<p>Then, execute\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">npm run build</code></span>\u00a0to build a version of the app ready for production. You can find the output files in the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">build</code></span>\u00a0folder.</p>\n<p>Now, let\u2019s use Amazon S3 to host the app and go completely serverless.</p>\n<p>Amazon S3 is a storage service that can also function as a web server.</p>\n<p>In S3, you put your files in buckets. You can know more about S3 in\u00a0<a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/Welcome.html\" data-css-1skajya=\"\">this developer guide</a>, for now, let\u2019s create a bucket.</p>\n<p>Open the\u00a0<em>Services</em>\u00a0menu and choose\u00a0<em>S3</em>:</p>\n<p><img class=\"alignnone size-full wp-image-646\" src=\"https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709.png\" alt=\"Choose S3\" width=\"1194\" height=\"886\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709.png 1194w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-300x223.png 300w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-768x570.png 768w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-1024x760.png 1024w, https://emolike.net/wp-content/uploads/2018/05/f9ea973d-1940-4ee1-ae00-ef9dfa5de709-364x270.png 364w\" sizes=\"(max-width: 1194px) 100vw, 1194px\" /></p>\n<p>Click on the\u00a0<em>Create bucket</em>\u00a0button and enter a name and the region where your bucket will be created:</p>\n<p><img class=\"alignnone size-full wp-image-647\" src=\"https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1.png\" alt=\"Create bucket\" width=\"686\" height=\"580\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1.png 686w, https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1-300x254.png 300w, https://emolike.net/wp-content/uploads/2018/05/b127a335-b964-4ed0-ba34-f2e752a18cd1-319x270.png 319w\" sizes=\"(max-width: 686px) 100vw, 686px\" /></p>\n<p>Make sure you don\u2019t put any spaces in the name. Also, the name has to be unique across all existing names in S3, so use your domain name or something unique.</p>\n<p>Next, click on the\u00a0<em>Create</em>\u00a0button, we\u2019ll take the default values for the properties and permissions tabs.</p>\n<p>Once the bucket is created, click on it, and go to the\u00a0<em>Properties</em>\u00a0tab:</p>\n<p><img class=\"alignnone size-full wp-image-648\" src=\"https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f.png\" alt=\"Properties tab\" width=\"1116\" height=\"596\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f.png 1116w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-300x160.png 300w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-768x410.png 768w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-1024x547.png 1024w, https://emolike.net/wp-content/uploads/2018/05/ad1b98a3-b12b-414a-8b55-6e9e778e842f-506x270.png 506w\" sizes=\"(max-width: 1116px) 100vw, 1116px\" /></p>\n<p>Click on the\u00a0<em>Static website hosting</em>\u00a0option and select\u00a0<em>Use this bucket to host a website</em>:</p>\n<p><img class=\"alignnone size-full wp-image-649\" src=\"https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e.png\" alt=\"set up web server\" width=\"564\" height=\"622\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e.png 564w, https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e-272x300.png 272w, https://emolike.net/wp-content/uploads/2018/05/c3e5c2f7-6655-4e0a-a192-e340d3d3900e-245x270.png 245w\" sizes=\"(max-width: 564px) 100vw, 564px\" /></p>\n<p>Since this is a single-page application, enter\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">index.html</code></span>\u00a0as the\u00a0<em>Index</em>and\u00a0<em>Error</em>\u00a0documents. Copy the URL that S3 gives you and click\u00a0<em>Save</em>.</p>\n<p>Next, in the\u00a0<em>Permissions</em>\u00a0tab, select\u00a0<em>Bucket Policy</em>:</p>\n<p><img class=\"alignnone size-full wp-image-650\" src=\"https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641.png\" alt=\"Edit policy\" width=\"1118\" height=\"596\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641.png 1118w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-300x160.png 300w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-768x409.png 768w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-1024x546.png 1024w, https://emolike.net/wp-content/uploads/2018/05/cc2dcb9b-bc4d-4395-acba-1c41477d0641-506x270.png 506w\" sizes=\"(max-width: 1118px) 100vw, 1118px\" /></p>\n<p>Enter the\u00a0<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-2\" data-css-1skajya=\"\">following policy</a>\u00a0to grant read-only permissions to your bucket, just change\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">examplebucket</code></span>\u00a0by your bucket name (in my case\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">net.eherrera.serverless-demo</code></span>):</p>\n<pre><code data-enlighter-language=\"json\">{\r\n  \"Version\":\"2012-10-17\",\r\n  \"Statement\":[\r\n    {\r\n      \"Sid\":\"AddPerm\",\r\n      \"Effect\":\"Allow\",\r\n      \"Principal\": \"*\",\r\n      \"Action\":[\"s3:GetObject\"],\r\n      \"Resource\":[\"arn:aws:s3:::examplebucket/*\"]\r\n    }\r\n  ]\r\n}</code></pre>\n<p>Click on\u00a0<em>Save</em>\u00a0to apply the policy:</p>\n<p><img class=\"alignnone size-full wp-image-651\" src=\"https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506.png\" alt=\"Save policy\" width=\"1168\" height=\"594\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506.png 1168w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-300x153.png 300w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-768x391.png 768w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-1024x521.png 1024w, https://emolike.net/wp-content/uploads/2018/05/a99114cb-3fb3-4b28-a21a-6d303bda7506-531x270.png 531w\" sizes=\"(max-width: 1168px) 100vw, 1168px\" /></p>\n<p>Now go to the\u00a0<em>Overview</em>\u00a0tab, click on the\u00a0<em>Upload</em>\u00a0button, drag the content of the\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">build</code></span>\u00a0directory and click on\u00a0<em>Upload</em>:</p>\n<p><img class=\"alignnone size-full wp-image-652\" src=\"https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4.png\" alt=\"Upload file\" width=\"692\" height=\"574\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4.png 692w, https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4-300x249.png 300w, https://emolike.net/wp-content/uploads/2018/05/8ae2c242-7a29-4a61-a7fe-ad6f17f1d7d4-326x270.png 326w\" sizes=\"(max-width: 692px) 100vw, 692px\" /></p>\n<p>Once the upload has finished, go to your app using the URL you copied (or go back to the\u00a0<em>Static website hosting</em>\u00a0option in the\u00a0<em>Properties</em>\u00a0tab to get it):</p>\n<p><img class=\"alignnone size-full wp-image-653\" src=\"https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab.png\" alt=\"App\" width=\"1280\" height=\"324\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab.png 1280w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-300x76.png 300w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-768x194.png 768w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-1024x259.png 1024w, https://emolike.net/wp-content/uploads/2018/05/048ccc9c-c4c7-43df-83d7-59a81e7139ab-604x153.png 604w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /></p>\n<p>Optionally, you can create another bucket to store the logs of the web server, you just have to enable the\u00a0<em>Server access logging</em>\u00a0option in the\u00a0<em>Properties</em>\u00a0tab.</p>\n<p>However, I would highly recommend using\u00a0<strong>CloudFront</strong>.</p>\n<p>CloudFront is a Content Delivery Network (CDN) service that will copy your app to edge locations around the world to improve the speed in which your app is served to your users. You can learn more about it in\u00a0<a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Introduction.html\" data-css-1skajya=\"\">this developer guide</a>.</p>\n<p>Open the\u00a0<em>Services</em>\u00a0menu and choose\u00a0<em>CloudFront</em>:</p>\n<p><img class=\"alignnone size-full wp-image-654\" src=\"https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3.png\" alt=\"choose cloudfront\" width=\"1212\" height=\"878\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3.png 1212w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-300x217.png 300w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-768x556.png 768w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-1024x742.png 1024w, https://emolike.net/wp-content/uploads/2018/05/224c8118-07eb-4fff-8d29-36fbefb224b3-373x270.png 373w\" sizes=\"(max-width: 1212px) 100vw, 1212px\" /></p>\n<p>Click on\u00a0<em>Create Distribution</em>\u00a0and under the\u00a0<em>Web</em>\u00a0section click on\u00a0<em>Get Started</em>:</p>\n<p><img class=\"alignnone size-full wp-image-655\" src=\"https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592.png\" alt=\"create web distribution\" width=\"1268\" height=\"534\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592.png 1268w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-300x126.png 300w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-768x323.png 768w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-1024x431.png 1024w, https://emolike.net/wp-content/uploads/2018/05/c96fc878-aa0e-45ab-ad47-072d57d4a592-604x254.png 604w\" sizes=\"(max-width: 1268px) 100vw, 1268px\" /></p>\n<p>In the\u00a0<em>Origin Domain Name</em>\u00a0select the bucket that contains your app,\u00a0<em>Origin ID</em>\u00a0will be populated:</p>\n<p><img class=\"alignnone size-full wp-image-656\" src=\"https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1.png\" alt=\"origin domain name\" width=\"1222\" height=\"364\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1.png 1222w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-300x89.png 300w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-768x229.png 768w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-1024x305.png 1024w, https://emolike.net/wp-content/uploads/2018/05/152146cc-c5d8-4134-8fed-084736b6ead1-604x180.png 604w\" sizes=\"(max-width: 1222px) 100vw, 1222px\" /></p>\n<p>Scroll down and under\u00a0<em>Distribution Settings</em>, set the\u00a0<em>Default Root Object</em>\u00a0value to\u00a0<span class=\"jsx-2975652623\"><code data-css-1xlff3i=\"\">index.html</code></span>\u00a0and click on\u00a0<em>Create Distribution</em>\u00a0at the bottom of the page.</p>\n<p>Wait a few minutes until the deployment has finished, and then click on the ID of your distribution:</p>\n<p><img class=\"alignnone size-full wp-image-657\" src=\"https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd.png\" alt=\"distribution ID\" width=\"1068\" height=\"270\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd.png 1068w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-300x76.png 300w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-768x194.png 768w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-1024x259.png 1024w, https://emolike.net/wp-content/uploads/2018/05/6e2187ab-5de4-4f88-aef8-583f5edf8ccd-604x153.png 604w\" sizes=\"(max-width: 1068px) 100vw, 1068px\" /></p>\n<p>In the\u00a0<em>General</em>\u00a0tab, you\u2019ll find the new URL of your app in the\u00a0<em>Domain Name</em>\u00a0row. (You can use the HTTPS protocol for your URL if you prefer):</p>\n<p><img class=\"alignnone size-full wp-image-658\" src=\"https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4.png\" alt=\"domain name\" width=\"1068\" height=\"560\" srcset=\"https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4.png 1068w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-300x157.png 300w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-768x403.png 768w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-1024x537.png 1024w, https://emolike.net/wp-content/uploads/2018/05/078285ec-56b2-432a-8859-0f86c00462b4-515x270.png 515w\" sizes=\"(max-width: 1068px) 100vw, 1068px\" /></p>\n<p>And that\u2019s it!</p>\n<h2 data-css-7941k5=\"\">Conclusion</h2>\n<div>\n<p>The idea of a serverless application is interesting:</p>\n<ul>\n<li>There\u2019s no need to manage any servers.</li>\n<li>The application can be scaled automatically and highly available.</li>\n<li>You pay only for the resources used and for the time the application is used.</li>\n</ul>\n<p>In this tutorial, you have learned how to use AWS\u2019s API Gateway and Lambda functions to build a REST API that performs CRUD operations on a database built on the AWS DynamoDB database framework. This guide also covered how to host this API on S3 in a single-page application that can be distributed worldwide using CloudFront.</p>\n<p>This was just a cursory look at each of these technologies; there is a lot more to learn about each technology and about other AWS components as well!</p>\n<p>In case AWS excites you, some interesting projects would include authenticating users with\u00a0<a href=\"https://aws.amazon.com/cognito/\" data-css-1skajya=\"\">Amazon Cognito</a>\u00a0or using a framework like\u00a0<a href=\"https://serverless.com/\" data-css-1skajya=\"\">Serveless</a>\u00a0or a service like\u00a0<a href=\"https://aws.amazon.com/cloudformation/\" data-css-1skajya=\"\">AWS CloudFormation</a>\u00a0to simplify the managing and deploying of serverless applications.</p>\n<hr />\n<p>Thanks for reading. I hope you found this guide informative and engaging.</p>\n<div id=\"at_zurlpreview\">\n<h2>Building a Serverless Web App on AWS Services | Pluralsight</h2>\n<h3 style=\"display: none;\">Building a Serverless Web App on AWS Services | PluralsightPluralsight Guides</h3>\n<p class=\"imgs\">Source: <a href=\"https://www.pluralsight.com/guides/building-a-serverless-web-app-on-aws-services\" target=\"_blank\" rel=\"noopener\">www.pluralsight.com/guides/building-a-serverless-web-app-on-aws-services</a></p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n", "slug": "building-a-serverless-web-app-on-aws-services", "date": 1526655980, "cats": [0, 32, 8, 1, 19, 43, 30, 24, 15]}