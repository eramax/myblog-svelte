{"title": "Deployment Management Tools: Chef vs. Puppet vs. Ansible vs. SaltStack vs. Fabric", "content": "<p><strong>What are the\u00a0pros and cons of Chef, Puppet, Ansible, SaltStack and Fabric?\u00a0<em>(Updated: 13/8/17)</em></strong></p>\n<p>Working in production today often means continuous deployments and an environment distributed all over the world. When your infrastructure is decentralized and cloud-based and you\u2019re dealing with frequent deployments of largely identical services across largely identical servers, having a way to automate the configuration and maintenance of everything is a large boon. Deployment management tools and configuration management tools are designed for this purpose. They enable you to use recipes, playbooks, templates, or whatever terminology to simplify automation and orchestration across your environment to provide a standard, consistent deployment.</p>\n<p>There are several considerations to keep in mind when choosing a tool in this space. One is the model for the tool. Some require a master-client model, which uses a centralized control point to communicate to distributed machines, while others can or do operate on a more local level. Another consideration is the makeup of your environment. Some tools are written in different languages and support for particular OSs or setups can vary. Making sure your tool of choice will mesh well with your environment and the particular skills of your team can save you a lot of headaches here.</p>\n<h2>1. Ansible</h2>\n<p><img class=\"alignnone size-full wp-image-299\" src=\"https://emolike.net/wp-content/uploads/2018/04/ansible.jpg\" width=\"125\" height=\"125\" alt=\"1\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/ansible.jpg 125w, https://emolike.net/wp-content/uploads/2018/04/ansible-80x80.jpg 80w\" sizes=\"(max-width: 125px) 100vw, 125px\" /><br />\n<a href=\"http://www.ansible.com/\" target=\"_blank\" rel=\"noopener\">Ansible</a>\u00a0is an open source tool used to deploy applications to remote nodes and provision servers in a repeatable way. It gives you a common framework for pushing multi-tier applications and application artifacts using a push model setup, although you can set it up as master-client if you\u2019d like. Ansible is built on playbooks that you can apply to an extensive variety of systems for deploying your app.</p>\n<figure id=\"attachment_2541\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-300\" src=\"https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x.png\" width=\"598\" height=\"422\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x.png 598w, https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x-300x212.png 300w, https://emolike.net/wp-content/uploads/2018/04/Tower-3-Dashboard-1x-200x141.png 200w\" sizes=\"(max-width: 598px) 100vw, 598px\" /><figcaption class=\"wp-caption-text\"><em>The Ansible Tower dashboard</em></figcaption></figure>\n<p> </p>\n<p><strong>When to use it:</strong>\u00a0If getting up and running quickly and easily is important to you and you don\u2019t want to install agents on remote nodes or managed servers, consider Ansible. It\u2019s good if your need or focus is more on the system administrator side. Ansible is focused on being streamlined and fast, so if those are key concerns for you, give it a shot.</p>\n<p><strong>Price:</strong>\u00a0Free open source version, with paid plans for Ansible Tower starting at $5,000 per year (which gives you up to 100 nodes).</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>SSH-based, so it doesn\u2019t require installing any agents on remote nodes.</li>\n<li>Easy learning curve thanks to the use of YAML.</li>\n<li>Playbook structure is simple and clearly structured.</li>\n<li>Has a variable registration feature that enables tasks to register variables for later tasks</li>\n<li>Much more streamlined code base than some other tools</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Less powerful than tools based in other programming languages.</li>\n<li>Does its logic through its DSL, which means checking in on the documentation frequently until you learn it</li>\n<li>Variable registration is required for even basic functionality, which can make easier tasks more complicated</li>\n<li>Introspection is poor. Difficult to see the values of variables within the playbooks</li>\n<li>No consistency between formats of input, output, and config files</li>\n<li>Struggles with performance speed at times.</li>\n</ul>\n<p><a href=\"https://www.ansible.com/quick-start-video\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>2. Chef</h2>\n<p><img class=\"alignnone size-full wp-image-301\" src=\"https://emolike.net/wp-content/uploads/2018/04/chef-logo.jpg\" width=\"113\" height=\"111\" alt=\"2\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/chef-logo.jpg 113w, https://emolike.net/wp-content/uploads/2018/04/chef-logo-80x80.jpg 80w\" sizes=\"(max-width: 113px) 100vw, 113px\" /><br />\n<a href=\"https://www.chef.io/\" target=\"_blank\" rel=\"noopener\">Chef</a>\u00a0is an open source tool for configuration management, focused on the developer side for its user base. Chef operates as a master-client model, with a separate workstation needed to control the master. It\u2019s based in Ruby, with pure Ruby used for most elements you write. The Chef design is transparent and based on following the instructions it\u2019s given, which means that you\u2019ll have to make sure your instructions are clear.</p>\n<figure id=\"attachment_2542\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-302\" src=\"https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node.png\" width=\"1280\" height=\"719\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node.png 1280w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-300x169.png 300w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-768x431.png 768w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-1024x575.png 1024w, https://emolike.net/wp-content/uploads/2018/04/chef_compliance_node-200x112.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption class=\"wp-caption-text\"><em>The Chef dashboard</em></figcaption></figure>\n<p><strong>When to use it:</strong>\u00a0Before considering Chef, make sure you\u2019re familiar with Git, as it\u2019s required for configuration, and Ruby, as you\u2019ll have to be writing in it. Chef is good for development-focused teams and environments. It\u2019s good for enterprises looking for a more mature solution for a heterogeneous environment.</p>\n<p><strong>Price:</strong>\u00a0Free open source version, standard and premium plans priced on a per node annual basis. The prices start at $137/node/annual for Chef Automate, or $72/node/annual for Hosted Chef.</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Rich collection of modules and configuration recipes.</li>\n<li>Code-driven approach gives you more control and flexibility over your configurations.</li>\n<li>Being centered around Git gives it strong version control capabilities.</li>\n<li>\u2018Knife\u2019 tool (which uses SSH for deploying agents from workstation) eases installation burdens.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>The learning curve is steep if you\u2019re not already familiar with Ruby and procedural coding.</li>\n<li>It\u2019s not a simple tool, which can lead to large code bases and complicated environments.</li>\n<li>Doesn\u2019t support push functionality.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=kDeRHgnuDzc\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>3. Fabric</h2>\n<p><img class=\"alignnone size-full wp-image-303\" src=\"https://emolike.net/wp-content/uploads/2018/04/fabric-logo.jpg\" width=\"150\" height=\"117\" alt=\"3\" /><br />\n<a href=\"http://www.fabfile.org/\" target=\"_blank\" rel=\"noopener\">Fabric</a>\u00a0is a Python-based tool for streamlining SSH in application deployments. Its primary usage is for running tasks across multiple remote systems, but it can also be extended with plugins to provide more advanced functionality. Fabric will configure your system, do system/server administration, and automate the deployment of your app.</p>\n<figure id=\"attachment_2543\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-304\" src=\"https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard.png\" width=\"1280\" height=\"1029\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard.png 1280w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-300x241.png 300w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-768x617.png 768w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-1024x823.png 1024w, https://emolike.net/wp-content/uploads/2018/04/fabric-dashboard-200x161.png 200w\" sizes=\"(max-width: 1280px) 100vw, 1280px\" /><figcaption class=\"wp-caption-text\"><em>The Fabric dashboard</em></figcaption></figure>\n<p><strong>When to use it:</strong>\u00a0If you\u2019re just starting out in the deployment automation space, Fabric is a good beginning point. It helps if your environment involves at least a little bit of Python.</p>\n<p><strong>Price:</strong>\u00a0Free</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Good at deploying apps written in any language. It doesn\u2019t depend on system architecture, but rather OS and package manager.</li>\n<li>Simpler and easier to deploy than some other tools in this space</li>\n<li>Extensively integrated with SSH for script-based streamlining</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Fabric is a single point of failure set up (generally the machine you\u2019re running the deploy on)</li>\n<li>Uses a push model, so not as well suited for a continuous deployment model as some other tools in this space</li>\n<li>While it\u2019s a great tool for deploying apps in most languages, it does require Python to run, so you must have at least a little Python in your environment for Fabric.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=VmcGuKPpWH8\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>4. Puppet</h2>\n<p><img class=\"alignnone size-full wp-image-305\" src=\"https://emolike.net/wp-content/uploads/2018/04/puppetlogo.png\" width=\"532\" height=\"187\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/puppetlogo.png 532w, https://emolike.net/wp-content/uploads/2018/04/puppetlogo-300x105.png 300w, https://emolike.net/wp-content/uploads/2018/04/puppetlogo-200x70.png 200w\" sizes=\"(max-width: 532px) 100vw, 532px\" /></p>\n<p><a href=\"https://puppet.com/\" target=\"_blank\" rel=\"noopener\">Puppet</a>\u00a0is one of the long standing tools in the full-fledged configuration management space. It\u2019s an open source tool, but given how long it\u2019s been around, it has been well vetted and deployed in some of the biggest and most demanding environments. Puppet is based on Ruby, but uses a customized Domain Scripting Language (DSL) closer to JSON for working within it. It runs as a master-client setup and uses a model-driven approach. The Puppet code design works as a list of dependencies, which can make things easier or more confusing, depending on your setup.</p>\n<figure id=\"attachment_2545\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-306\" src=\"https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard.png\" width=\"623\" height=\"402\" alt=\"\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard.png 623w, https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard-300x194.png 300w, https://emolike.net/wp-content/uploads/2018/04/puppet-dashboard-200x129.png 200w\" sizes=\"(max-width: 623px) 100vw, 623px\" /><figcaption class=\"wp-caption-text\"><em>The Puppet Enterprise dashboard</em></figcaption></figure>\n<p><strong>When to use it:</strong>\u00a0Puppet is a good choice if stability and maturity are key factors for you. It\u2019s good for large enterprises with a heterogeneous environment and range of skills on the DevOps team.</p>\n<p><strong>Price:</strong>\u00a0Puppet comes in a free open source version or a paid commercial enterprise version that runs $120 per node per year, with volume discounts.</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Well-established support community through Puppet Labs.</li>\n<li>It has the most mature interface and runs on nearly every OS.</li>\n<li>Simple installation and initial setup.</li>\n<li>Most complete Web UI in this space.</li>\n<li>Strong reporting capabilities.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>For more advanced tasks, you will need to use the CLI, which is Ruby-based (meaning you\u2019ll have to understand Ruby).</li>\n<li>Support for pure-Ruby versions (rather than those using Puppet\u2019s customized DSL) is being scaled back.</li>\n<li>Because of the DSL and a design that does not focus on simplicity, the Puppet code base can grow large, unwieldy, and hard to pick up for new people in your organization at higher scale.</li>\n<li>Model-driven approach means less control compared to code-driven approaches.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=j8ImF23jZAg\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>5. Saltstack</h2>\n<p><img class=\"alignnone size-full wp-image-307\" src=\"https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250.jpg\" width=\"800\" height=\"244\" alt=\"Saltstack\" srcset=\"https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250.jpg 800w, https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250-300x92.jpg 300w, https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250-768x234.jpg 768w, https://emolike.net/wp-content/uploads/2018/04/Saltstack-e1438268638250-200x61.jpg 200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><br />\n<a href=\"http://saltstack.com/\" target=\"_blank\" rel=\"noopener\">SaltStack</a>\u00a0(or Salt) is a CLI-based tool that can be set up as a master-client model or a non-centralized model. Based in Python, Salt offers a push method and an SSH method of communication with clients. Salt allows for grouping of clients and configuration templates to simplify the control of the environment.</p>\n<p><strong>When to use it:</strong>\u00a0Salt is a good choice if scalability and resiliency are a big concern. It\u2019s good for system administrators thanks to its usability.</p>\n<p><strong>Price:</strong>\u00a0Free open source version, and a SaltStack Enterprise version that is based on an annual per node subscription basis. Specific pricing is not listed on their site (just a \u201cContact us\u201d link), but others have reported a $150 per node per year starting point.</p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Straightforward organization and usage once you\u2019re past the setup phase.</li>\n<li>Their DSL is feature-rich and isn\u2019t required for logic and states.</li>\n<li>Input, output, and configs are very consistent \u2013 all YAML.</li>\n<li>Introspection is very good. It\u2019s easy to see what\u2019s happening within Salt.</li>\n<li>Strong community.</li>\n<li>High scalability and resiliency in the master model with minions and hierarchical tiers.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Difficult to set up and to pick up for new users.</li>\n<li>Documentation is challenging to understand at the introductory level.</li>\n<li>Web UI is newer and less complete than other tool\u2019s Web UIs in the space.</li>\n<li>Not great support for non-Linux OSs.</li>\n</ul>\n<p><a href=\"https://www.youtube.com/watch?v=TQjE2I8CrzQ\" target=\"_blank\" rel=\"noopener\">View video</a></p>\n<h2>Ansible vs. Chef vs. Fabric vs. Puppet vs. SaltStack</h2>\n<p>Which configuration management or deployment automation tool you use will depend on your needs and preferences for your environment. Chef and Puppet are some of the older, more established options, making them good for larger enterprises and environments that value maturity and stability over simplicity. Ansible and SaltStack are good options for those looking for fast and simple solutions while working in environments that don\u2019t need support for quirky features or lots of OSs. Fabric is a good tool for smaller environments and those looking for a more low lift and entry level solution.</p>\n<p> </p>\n", "slug": "deployment-management-tools-chef-vs-puppet-vs-ansible-vs-saltstack-vs-fabric", "date": 1523102806, "cats": [0, 10]}