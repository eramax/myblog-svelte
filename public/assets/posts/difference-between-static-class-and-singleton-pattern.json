{"title": "Difference between static class and singleton pattern?", "content": "<p><strong>Static Class:-</strong></p>\n<ol>\n<li>You cannot create the instance of static class.</li>\n<li>Loaded automatically by the .NET Framework common language runtime (CLR) when the program or namespace containing the class is loaded.</li>\n<li>Static Class cannot have constructor.</li>\n<li>We cannot pass the static class to method.</li>\n<li>We cannot inherit Static class to another Static class in C#.</li>\n<li>A class having all static methods.</li>\n<li>Better performance (static methods are bonded on compile time)</li>\n<li>static objects are stored in\u00a0<strong>stack</strong>.</li>\n<li>we can not clone the static class object .</li>\n</ol>\n<p><strong>Singleton:-</strong></p>\n<ol>\n<li>You can create one instance of the object and reuse it.</li>\n<li>Singleton instance is created for the first time when the user requested.</li>\n<li>Singleton class can have constructor.</li>\n<li>You can create the object of singleton class and pass it to method.</li>\n<li>Singleton class does not say any restriction of Inheritance.</li>\n<li>We can dispose the objects of a singleton class but not of static class.</li>\n<li>Methods can be overridden.</li>\n<li>Can be lazy loaded when need (static classes are always loaded).</li>\n<li>We can implement interface(static class can not implement interface).</li>\n<li>Singleton objects are stored in\u00a0<strong>Heap</strong></li>\n<li>We can\u00a0<strong>clone</strong>\u00a0(if the designer did not disallow it) the singleton object</li>\n<li>Singleton classes follow the\u00a0<strong>OOP</strong>\u00a0(object oriented principles), static classes do not.</li>\n</ol>\n<p>Source :\u00a0<a href=\"https://stackoverflow.com/questions/519520/difference-between-static-class-and-singleton-pattern\">https://stackoverflow.com/questions/519520/difference-between-static-class-and-singleton-pattern</a></p>\n", "slug": "difference-between-static-class-and-singleton-pattern", "date": 1537791955, "cats": [0, 14, 17]}