{"title": "Dynamic Workflow", "content": "<p>I tried to implement Dynamic Workflow and how we can create dynamic workflow functions and execute it in sequence, I used Inversion of control to achieve this .</p>\n<p>here is the idea code:</p>\n<pre><code data-enlighter-language=\"csharp\">using System;\r\nusing System.Collections.Generic;\r\n\r\nnamespace a1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            WorkFlow wf = new WorkFlow();\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n\r\n            wf._worklist.AddLast(new PrintEmpList());\r\n\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n            wf._worklist.AddLast(new CreateEmpList());\r\n\r\n            wf._worklist.AddLast(new PrintEmpList());\r\n            wf.execute();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n    public interface IFunction\r\n    {\r\n        void execute();\r\n    }\r\n    public interface IValidator\r\n    {\r\n        bool isValid();\r\n    }\r\n    public interface ICriteria\r\n    {\r\n        \r\n    }\r\n\r\n    public class DbModel&lt;T&gt;  where T : class\r\n    {\r\n        private static List&lt;T&gt; _list = new List&lt;T&gt;();\r\n\r\n        public static T Add(T m)\r\n        {\r\n            _list.Add(m);\r\n            return m;    \r\n        }\r\n\r\n        public static void Delete(T m)\r\n        {\r\n            _list.Remove(m);\r\n        }\r\n\r\n        public static List&lt;T&gt; Select(ICriteria c)\r\n        {\r\n            //---- TODO \r\n            return _list;\r\n        }\r\n\r\n        public static T Update(T m)\r\n        {\r\n            //---- TODO \r\n            return m;\r\n        }\r\n    }\r\n\r\n    public class Emp : DbModel&lt;Emp&gt; , IValidator\r\n    {\r\n        public string name { set; get; }\r\n        public string email { set; get; }\r\n        public string mobile { set; get; }\r\n\r\n        public bool isValid()\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    public class CreateEmpList : IFunction\r\n    {\r\n        public void execute()\r\n        {\r\n            Emp _emp = new Emp() { name = \"Ahmed Essam\", email = \"eng.eramax@gmail.com\", mobile = \"966666666\" };\r\n            Emp.Add(_emp);\r\n        }\r\n    }\r\n    public class PrintEmpList : IFunction\r\n    {\r\n        public void execute()\r\n        {\r\n            foreach (Emp _emp in Emp.Select(null)) Console.WriteLine(\"Name: \" + _emp.name + \" , Email: \" + _emp.email + \" , Mobile: \" + _emp.mobile);\r\n        }\r\n    }\r\n\r\n    public class WorkFlow : IFunction\r\n    {\r\n        public LinkedList&lt;IFunction&gt; _worklist { get; set; }\r\n        public WorkFlow ()\r\n        {\r\n            _worklist = new LinkedList&lt;IFunction&gt;();\r\n        }\r\n        public void execute()\r\n        {\r\n            foreach (IFunction _func in _worklist) _func.execute();\r\n        }\r\n    }\r\n}\r\n</code></pre>\n<p>The Output</p>\n<p><img class=\"alignnone size-full wp-image-845\" src=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_\u0662\u0660\u0661\u0668\u0660\u0669\u0660\u0665\u0661\u0664\u0664\u0660\u0663\u0660.png\" alt=\"\" width=\"682\" height=\"340\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_\u0662\u0660\u0661\u0668\u0660\u0669\u0660\u0665\u0661\u0664\u0664\u0660\u0663\u0660.png 682w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_\u0662\u0660\u0661\u0668\u0660\u0669\u0660\u0665\u0661\u0664\u0664\u0660\u0663\u0660-300x150.png 300w, https://emolike.net/wp-content/uploads/2018/09/DeepinScreenshot_select-area_\u0662\u0660\u0661\u0668\u0660\u0669\u0660\u0665\u0661\u0664\u0664\u0660\u0663\u0660-542x270.png 542w\" sizes=\"(max-width: 682px) 100vw, 682px\" /></p>\n", "slug": "dynamic-workflow", "date": 1536151143, "cats": [12, 13, 16]}