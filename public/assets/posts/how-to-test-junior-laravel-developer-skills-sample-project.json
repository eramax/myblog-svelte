{"title": "How to Test Junior Laravel Developer Skills: Sample Project", "content": "<p>While expanding my team and working with potential junior developers, I\u2019ve come up with a few tasks to test their practical knowledge. There\u2019s not much value in quizzes or interviews \u2013\u00a0<b>let them create one simple project</b>. From start to finish. So here\u2019s an example of such project, you can use it for your own needs.</p>\n<p>We need to test basic Laravel skills, right? So the project should be simple, but at the same time touch majority of fundamentals. Also, it should be possible to do within a day or so \u2013 in some cases, you would even pay them for spending their time.</p>\n<p>With that in mind, here\u2019s a project I came up with.</p>\n<h2>Adminpanel to manage companies</h2>\n<p>Basically, project to manage companies and their employees. Mini-CRM.</p>\n<ul>\n<li>Basic Laravel Auth: ability to log in as administrator</li>\n<li>Use database seeds to create first user with email admin@admin.com and password \u201cpassword\u201d</li>\n<li>CRUD functionality (Create / Read / Update / Delete) for two menu items:\u00a0<b>Companies</b>\u00a0and\u00a0<b>Employees</b>.</li>\n<li>Companies DB table consists of these fields: Name (required), email, logo (minimum 100\u00d7100), website</li>\n<li>Employees DB table consists of these fields: First name (required), last name (required), Company (foreign key to Companies), email, phone</li>\n<li>Use database migrations to create those schemas above</li>\n<li>Store companies logos in\u00a0<b>storage/app/public</b>\u00a0folder and make them accessible from public</li>\n<li>Use basic Laravel resource controllers with default methods \u2013 index, create, store etc.</li>\n<li>Use Laravel\u2019s validation function, using Request classes</li>\n<li>Use Laravel\u2019s pagination for showing Companies/Employees list, 10 entries per page</li>\n<li>Use Laravel\u00a0<b>make:auth</b>\u00a0as default Bootstrap-based design theme, but remove ability to register</li>\n</ul>\n<p><img class=\"alignnone size-full wp-image-101\" src=\"https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505.png\" width=\"1024\" height=\"505\" alt=\"company-crud\" srcset=\"https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505.png 1024w, https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505-300x148.png 300w, https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505-768x379.png 768w, https://emolike.net/wp-content/uploads/2018/03/company-crud-1024x505-200x99.png 200w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></p>\n<p> </p>\n<p>Basically, that\u2019s it. With this simple exercise junior developer shows the skills in basic Laravel things:</p>\n<ul>\n<li>MVC</li>\n<li>Auth</li>\n<li>CRUD and Resource Controllers</li>\n<li>Eloquent and Relationships</li>\n<li>Database migrations and seeds</li>\n<li>Form Validation and Requests</li>\n<li>File management</li>\n<li>Basic Bootstrap front-end</li>\n<li>Pagination</li>\n</ul>\n<p>Guess what \u2013 most of the basics web-applications will have these functions as core. There will be a lot more on top of that, but without these fundamentals you cannot move further.</p>\n<p>So this task would actually test if the person can create simple projects. And then it\u2019s practice, practice, practice on more projects, each of them individual and adding more to their knowledge base.</p>\n<p>From my own experience, different developers are \u201ccreative\u201d in different code places \u2013 some don\u2019t use Resource controllers and put Route::get everywhere, some don\u2019t validate forms, some don\u2019t test their code properly etc. That\u2019s exactly the things you want to spot as early as possible.</p>\n<hr />\n<h2>Extra Task for \u201cAdvanced\u201d Juniors</h2>\n<p>If you feel like this task is too small and simple, you can add these things on top:</p>\n<ul>\n<li>Use Datatables.net library to show table \u2013 with our without server-side rendering</li>\n<li>Use more complicated front-end theme like AdminLTE</li>\n<li>Email notification: send email whenever new company is entered (use Mailgun or Mailtrap)</li>\n<li>Make the project multi-language (using\u00a0<b>resources/lang</b>\u00a0folder)</li>\n<li>Basic testing with phpunit (I know some would argue it should be the basics, but I disagree)</li>\n</ul>\n<p>Do you agree with such task? What would you change or add to this?<br />\nAnd have you had any experience with giving similar tasks, what were your impressions?</p>\n<p>source:\u00a0http://laraveldaily.com/test-junior-laravel-developer-sample-project/</p>\n", "slug": "how-to-test-junior-laravel-developer-skills-sample-project", "date": 1520789800, "cats": [0, 15]}