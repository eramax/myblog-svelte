{"title": "Series: Writing High-Performance C# and .NET Code", "content": "<p>I am interested in reading this series on this <a href=\"https://www.stevejgordon.co.uk/writing-high-performance-csharp-and-dotnet-code\">link</a></p>\n<p>This series explores modern C# and .NET/.NET Core techniques and features which support writing more performance, low allocation code.</p>\n<h2>Posts in this series:</h2>\n<ul>\n<li><a href=\"https://www.stevejgordon.co.uk/motivations-for-writing-high-performance-csharp-code\">Part 1: Motivations for Writing High-Performance C# Code</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/introduction-to-benchmarking-csharp-code-with-benchmark-dot-net\">Part 2: Introduction to Benchmarking C# Code with Benchmark .NET</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/an-introduction-to-optimising-code-using-span-t\">Part 3: An Introduction to Optimising Code Using Span&lt;T&gt;</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/creating-strings-with-no-allocation-overhead-using-string-create-csharp\">Part 4: Creating Strings with No Allocation Overhead Using String.Create</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/profiling-dotnetcore-memory-traffic-using-jetbrains-dotmemory\">Part 5:\u00a0Profiling .NET Core Memory Traffic using JetBrains dotMemory</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/interpreting-the-dotnet-core-memory-timeline-in-jetbrains-dotmemory\">Part 6:\u00a0Interpreting the .NET Core Memory Timeline in JetBrains dotMemory</a></li>\n<li><a href=\"https://www.stevejgordon.co.uk/analysing-the-large-object-heap-in-jetbrains-dotmemory\">Part 7:\u00a0Analysing the Large Object Heap in JetBrains dotMemory</a></li>\n</ul>\n", "slug": "series-writing-high-performance-c-and-net-code", "date": 1558708412, "cats": [12, 13, 17, 16, 14]}