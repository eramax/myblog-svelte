{"title": "SSH Passwordless Login Using SSH Keygen in 5 Easy Steps", "content": "<p><strong>SSH</strong>\u00a0(<strong>Secure SHELL</strong>) is an open source and most trusted network protocol that is used to login into remote servers for execution of commands and programs. It is also used to transfer files from one computer to another computer over the network using secure copy (<strong>SCP</strong>) Protocol.</p>\n<p>In this article we will show you how to setup password-less login on\u00a0<strong>RHEL/CentOS 7.x/6.x/5.x</strong>\u00a0and\u00a0<strong>Fedora</strong>\u00a0using\u00a0<strong>ssh keys</strong>\u00a0to connect to remote\u00a0<strong>Linux</strong>\u00a0servers without entering password. Using Password-less login with\u00a0<strong>SSH keys</strong>\u00a0will increase the trust between two\u00a0<strong>Linux</strong>\u00a0servers for easy file synchronization or transfer.</p>\n<div id=\"attachment_1322\" class=\"wp-caption aligncenter\"><img class=\"alignnone size-full wp-image-930\" title=\"SSH Passwordless Login\" src=\"https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login.jpg\" alt=\"SSH Passwordless Login\" width=\"720\" height=\"345\" srcset=\"https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login.jpg 720w, https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login-300x144.jpg 300w, https://emolike.net/wp-content/uploads/2018/09/SSH-Passwordless-Login-563x270.jpg 563w\" sizes=\"(max-width: 720px) 100vw, 720px\" /></div>\n<h2>Short Method:</h2>\n<pre><code data-enlighter-language=\"null\">cat ~/.ssh/id_rsa.pub | ssh remote_username@server_ip_address \"mkdir -p ~/.ssh &amp;&amp; chmod 700 ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys &amp;&amp; chmod 600 ~/.ssh/authorized_keys\"</code></pre>\n<h2>My Setup Environment</h2>\n<pre><code data-enlighter-language=\"null\">SSH Client : 192.168.0.12 ( Fedora 21 )\r\nSSH Remote Host : 192.168.0.11 ( CentOS 7 )</code></pre>\n<p>If you are dealing with number of\u00a0<strong>Linux</strong>\u00a0remote servers, then\u00a0<strong>SSH Password-less</strong>\u00a0login is one of the best way to automate tasks such as automatic backups with scripts, synchronization files using scp and remote command execution.</p>\n<p>In this example we will setup\u00a0<strong>SSH password-less</strong>\u00a0automatic login from server<strong>\u00a0192.168.0.12</strong>\u00a0as user\u00a0<strong>tecmint</strong>\u00a0to\u00a0<strong>192.168.0.11</strong>\u00a0with user\u00a0<strong>sheena</strong>.</p>\n<h3>Step 1: Create Authentication SSH-Kegen Keys on \u2013 (192.168.0.12)</h3>\n<p><center></center>First login into server\u00a0<strong>192.168.0.12</strong>\u00a0with user\u00a0<strong>tecmint</strong>\u00a0and generate a pair of public keys using following command.</p>\n<pre><code data-enlighter-language=\"null\">[tecmint@tecmint.com ~]$ ssh-keygen -t rsa\r\nGenerating public/private rsa key pair.\r\nEnter file in which to save the key (/home/tecmint/.ssh/id_rsa): [Press enter key]\r\nCreated directory '/home/tecmint/.ssh'.\r\nEnter passphrase (empty for no passphrase): [Press enter key]\r\nEnter same passphrase again: [Press enter key]\r\nYour identification has been saved in /home/tecmint/.ssh/id_rsa.\r\nYour public key has been saved in /home/tecmint/.ssh/id_rsa.pub.\r\nThe key fingerprint is:\r\n5f:ad:40:00:8a:d1:9b:99:b3:b0:f8:08:99:c3:ed:d3 tecmint@tecmint.com\r\nThe key's randomart image is:\r\n+--[ RSA 2048]----+\r\n|        ..oooE.++|\r\n|         o. o.o  |\r\n|          ..   . |\r\n|         o  . . o|\r\n|        S .  . + |\r\n|       . .    . o|\r\n|      . o o    ..|\r\n|       + +       |\r\n|        +.       |\r\n+-----------------+</code></pre>\n<p><img class=\"alignnone size-full wp-image-931\" src=\"https://emolike.net/wp-content/uploads/2018/09/Create-SSH-RSA-Key.gif\" alt=\"Create SSH RSA Key\" width=\"744\" height=\"434\" /></p>\n<h3>Step 2: Create .ssh Directory on \u2013 192.168.0.11</h3>\n<p>Use SSH from server\u00a0<strong>192.168.0.12</strong>\u00a0to connect server\u00a0<strong>192.168.0.11</strong>\u00a0using\u00a0<strong>sheena</strong>\u00a0as user and create\u00a0<strong>.ssh\u00a0</strong>directory under it, using following command.</p>\n<pre><code data-enlighter-language=\"null\">[tecmint@tecmint ~]$ ssh sheena@192.168.0.11 mkdir -p .ssh\r\nThe authenticity of host '192.168.0.11 (192.168.0.11)' can't be established.\r\nRSA key fingerprint is 45:0e:28:11:d6:81:62:16:04:3f:db:38:02:la:22:4e.\r\nAre you sure you want to continue connecting (yes/no)? yes\r\nWarning: Permanently added '192.168.0.11' (ECDSA) to the list of known hosts.\r\nsheena@192.168.0.11's password: [Enter Your Password Here]\r\n</code></pre>\n<p><img class=\"alignnone size-full wp-image-932\" src=\"https://emolike.net/wp-content/uploads/2018/09/Create-SSH-Directory.gif\" alt=\"Create SSH Directory Under User Home\" width=\"744\" height=\"434\" /></p>\n<h3>Step 3: Upload Generated Public Keys to \u2013 192.168.0.11</h3>\n<p>Use SSH from server\u00a0<strong>192.168.0.12</strong>\u00a0and upload new generated public key (<strong>id_rsa.pub</strong>) on server\u00a0<strong>192.168.0.11</strong>\u00a0under\u00a0<strong>sheena</strong>\u2018s\u00a0<strong>.ssh</strong>\u00a0directory as a file name\u00a0<strong>authorized_keys</strong>.</p>\n<pre><code data-enlighter-language=\"null\">[tecmint@tecmint ~]$ cat .ssh/id_rsa.pub | ssh sheena@192.168.0.11 'cat &gt;&gt; .ssh/authorized_keys'\r\nsheena@192.168.1.2's password: [Enter Your Password Here]</code></pre>\n<p><img class=\"alignnone size-full wp-image-933\" src=\"https://emolike.net/wp-content/uploads/2018/09/Upload-RSA-Key.gif\" alt=\"Upload RSA Key\" width=\"744\" height=\"434\" /></p>\n<h3>Step 4: Set Permissions on \u2013 192.168.0.11</h3>\n<p>Due to different SSH versions on servers, we need to set permissions on .ssh directory and authorized_keys file.</p>\n<pre><code data-enlighter-language=\"null\">[tecmint@tecmint ~]$ ssh sheena@192.168.0.11 \"chmod 700 .ssh; chmod 640 .ssh/authorized_keys\"\r\nsheena@192.168.0.11's password: [Enter Your Password Here]</code></pre>\n<p><img class=\"alignnone size-full wp-image-934\" src=\"https://emolike.net/wp-content/uploads/2018/09/Set-Permission-on-SSH-Key.gif\" alt=\"Set Permission on SSH Key\" width=\"744\" height=\"434\" /></p>\n<h3>Step 5: Login from 192.168.0.12 to 192.168.0.11 Server without Password</h3>\n<p>From now onwards you can log into\u00a0<strong>192.168.0.11</strong>\u00a0as\u00a0<strong>sheena</strong>\u00a0user from server\u00a0<strong>192.168.0.12</strong>\u00a0as\u00a0<strong>tecmint\u00a0</strong>user without password.</p>\n<pre><code data-enlighter-language=\"null\">[tecmint@tecmint ~]$ ssh sheena@192.168.0.11\r\n</code></pre>\n<p><img class=\"alignnone size-full wp-image-935\" src=\"https://emolike.net/wp-content/uploads/2018/09/SSH-Remote-Passwordless-Login.gif\" alt=\"SSH Remote Passwordless Login\" width=\"708\" height=\"434\" /></p>\n<p>Source :\u00a0<a href=\"https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/\">https://www.tecmint.com/ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps/</a></p>\n", "slug": "ssh-passwordless-login-using-ssh-keygen-in-5-easy-steps", "date": 1537288092, "cats": [0, 9, 2, 11, 4, 5, 10]}