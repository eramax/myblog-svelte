{"title": "TinyPICO", "content": "<h3 class=\"project-teaser\">A tiny, mighty ESP32 development board</h3>\n<p>Source : <a href=\"https://www.crowdsupply.com/unexpected-maker/tinypico\">https://www.crowdsupply.com/unexpected-maker/tinypico</a></p>\n<p>TinyPICO is the world\u2019s smallest, fully-featured ESP32 development board, designed to give you access to the power of the ESP32\u2019s dual core 240 MHz processor and internet connectivity, all in a package smaller than your thumb!</p>\n<p><iframe title=\"vimeo-player\" src=\"https://player.vimeo.com/video/333392757\" width=\"640\" height=\"360\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\"></iframe></p>\n<h2 id=\"why-we-made-tinypico\">Why We Made TinyPICO</h2>\n<p>There are quite a few ESP32 boards on the market, but they all require you to compromise on one or more features. Some don\u2019t have on-board battery management, while some do but they don\u2019t have low deep sleep current. Others have great low-power modes, but are large and not breadboard-friendly, and none of them have extra RAM unless you go for a more expensive and larger WROVER-powered board.</p>\n<p>We just weren\u2019t happy with the status quo - we wanted to have our cake and eat it too!</p>\n<p>So we designed the smallest un-compromising ESP32 development board in the world, and then went a step further and gave it 4 MB of extra RAM, an on-board RGB LED, and more juice with a 700 mA 3.3 V regulator. Then we made some\u00a0<a href=\"https://www.crowdsupply.com/unexpected-maker/tinypico#tinypico-shields\">shields</a>\u00a0for it.</p>\n<div class=\"imageset-single\"><img class=\"alignnone size-full wp-image-1465\" src=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body.jpg\" width=\"749\" height=\"420\" alt=\"\" title=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body.jpg 749w, https://emolike.net/wp-content/uploads/2019/06/tinypico-size-battery-no-text_jpg_project-body-300x168.jpg 300w\" sizes=\"(max-width: 749px) 100vw, 749px\" /></div>\n<p>Until you hold it in your hand, you really can\u2019t appreciate just how small the TinyPICO is.</p>\n<h2 id=\"features-specifications\">Features &amp; Specifications</h2>\n<ul>\n<li><strong>Processing:</strong>\n<ul>\n<li>32-bit dual-core processor operating at 240 MHz</li>\n<li>4 MB SPI flash</li>\n<li>4 MB extra PSRAM</li>\n</ul>\n</li>\n<li><strong>Wireless:</strong>\n<ul>\n<li>2.4 GHz Wi-Fi - 802.11b/g/n</li>\n<li>Bluetooth BLE 4.2</li>\n<li>3D antenna</li>\n</ul>\n</li>\n<li><strong>Power:</strong>\n<ul>\n<li>700 mA 3.3 V LDO regulator</li>\n<li>Optimised power path for low-power battery usage</li>\n<li>LiPo battery management</li>\n<li>Battery pads on the bottom support both JST PH &amp; MicroBlade connectors (included unassembled with every TinyPICO)</li>\n<li>Power (red) &amp; charge (orange) LEDs</li>\n</ul>\n</li>\n<li><strong>Form-factor:</strong>\n<ul>\n<li>Breadboard-friendly</li>\n<li>Oh, it\u2019s tiny! Just 18 mm x 32 mm</li>\n</ul>\n</li>\n<li><strong>Connectivity:</strong>\n<ul>\n<li>14x GPIO broken out to standard pitch headers</li>\n<li>USB + serial/UART for programming</li>\n<li>APA102 RGB LED</li>\n</ul>\n</li>\n<li><strong>Control:</strong>\n<ul>\n<li>MicroPython pre-installed</li>\n<li>Supports Arduino IDE</li>\n<li>Supports Espressif IDF</li>\n<li>Lots of example code and libraries</li>\n</ul>\n</li>\n</ul>\n<div class=\"imageset-single\"><img class=\"alignnone size-full wp-image-1466\" src=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-breadboard-2_jpg_project-body.jpg\" width=\"749\" height=\"333\" alt=\"\" title=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-breadboard-2_jpg_project-body.jpg 749w, https://emolike.net/wp-content/uploads/2019/06/tinypico-breadboard-2_jpg_project-body-300x133.jpg 300w\" sizes=\"(max-width: 749px) 100vw, 749px\" /></div>\n<h2 id=\"pinout-diagram\">Pinout Diagram</h2>\n<div class=\"imageset-single\"><img class=\"alignnone size-full wp-image-1467\" src=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-pinout-black_jpg_project-body.jpg\" width=\"749\" height=\"468\" alt=\"\" title=\"\" srcset=\"https://emolike.net/wp-content/uploads/2019/06/tinypico-pinout-black_jpg_project-body.jpg 749w, https://emolike.net/wp-content/uploads/2019/06/tinypico-pinout-black_jpg_project-body-300x187.jpg 300w\" sizes=\"(max-width: 749px) 100vw, 749px\" /></div>\n<h2 id=\"development-platforms-software-documentation\">Development Platforms &amp; Software Documentation</h2>\n<p>TinyPICO ships with mainline MicroPython pre-installed and supports Arduino IDE and Espressif IDF, so you have the flexibility to code the way you want.</p>\n<p>We have been working hard behind the scenes on MicroPython and Arduino C++ helper libraries for TinyPICO as well as collecting and even writing MicroPython libraries for all the hardware we use on our shields.</p>\n<p>We have basic coding examples on our\u00a0<a href=\"https://www.tinypico.com/code-examples\">TinyPICO website</a>\u00a0and all of our libraries are being added to the\u00a0<a href=\"https://github.com/TinyPICO\">TinyPICO GitHub repository</a>.</p>\n<h2 id=\"optimised-power-paths-deep-sleep-current\">Optimised Power Paths &amp; Deep Sleep Current</h2>\n<p>TinyPICO has been designed with two isolated power paths: a 5 V path and a 3.3 V path. Any components that are not needed for operation via battery or via the 3.3 V power pin are isolated within the 5 V power path, and are totally shut down when no USB cable is plugged in.</p>\n<p>In-fact, even the power &amp; charge LEDs are shutdown when no 5 V power source is present.</p>\n<p>Deep sleep has been optimised for all development platforms, and though we have seen it go as low as 10 uA, our official current rating in deep sleep is 18 uA.</p>\n<p><strong>Note:</strong>\u00a0TinyPICO includes an on-board APA102 RGB LED that has a quiescent current of 1 mA.</p>\n<p>Thankfully we have a solution for deep sleep. GPIO13 controls the power to the APA102 using a PNP transistor via a high-side switch, so taking GPIO13 high shuts down power to the APA102. It\u2019s essential to do this before going into deep sleep to ensure the lowest current draw possible.</p>\n<p>In MicroPython, it\u2019s also required to shutdown GPIO2 and GPIO12 (DATA and CLK for the APA102) as MicroPython uses IDLE HIGH as the default clock state, so you can get current leakage via the CLK or DATA, even with no power to the APA102 directly. We have created some helper functions for you in our TinyPICO MicroPython helper library to make this easy.</p>\n<h2 id=\"open-source\">Open Source</h2>\n<p>We love open source hardware! Seon started his electronics journey digging through schematics and board layout files from the likes of Adafruit, Sparkfun, and many others, and it\u2019s only fitting that we now gave back to the community by making TinyPICO fully open source.</p>\n<p>All hardware is released under the\u00a0<a href=\"https://ohwr.org/cernohl\">CERN open hardware license</a>, so please make yourself familiar with it before you decide to fork or use the files.</p>\n<p>All software is released under the\u00a0<a href=\"https://en.wikipedia.org/wiki/MIT_License\">MIT open software license</a>, so again, please make yourself familiar with it before you decide to fork or use the files.</p>\n<p>All of the design files for the TinyPICO and all of the shields shown here are available from the\u00a0<a href=\"https://github.com/TinyPICO\">TinyPICO GitHub repository</a></p>\n<div class=\"row\">\n<div class=\"col-lg-12\">\n<h3 class=\"project-teaser\"></h3>\n</div>\n</div>\n", "slug": "tinypico", "date": 1559502619, "cats": [21]}