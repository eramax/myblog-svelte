{"title": "You Might Not Need Redux", "content": "<p id=\"7e78\" class=\"graf graf--p graf-after--h3\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"db72389e89d8\">People often choose Redux before they need it.</span>\u00a0\u201cWhat if our app doesn\u2019t scale without it?\u201d Later, developers frown at the indirection Redux introduced to their code. \u201cWhy do I have to touch three files to get a simple feature working?\u201d Why indeed!</p>\n<p id=\"2b2c\" class=\"graf graf--p graf-after--p\">People blame Redux, React, functional programming, immutability, and many other things for their woes, and I understand them. It is natural to compare Redux to an approach that doesn\u2019t require \u201cboilerplate\u201d code to update the state, and to conclude that Redux is just complicated. In a way it is, and by design so.</p>\n<p id=\"de62\" class=\"graf graf--p graf-after--p\">Redux offers a tradeoff. It asks you to:</p>\n<ul class=\"postList\">\n<li id=\"998d\" class=\"graf graf--li graf-after--p\">Describe application state as plain objects and arrays.</li>\n<li id=\"46e5\" class=\"graf graf--li graf-after--li\">Describe changes in the system as plain objects.</li>\n<li id=\"3bca\" class=\"graf graf--li graf-after--li\">Describe the logic for handling changes as pure functions.</li>\n</ul>\n<p id=\"5094\" class=\"graf graf--p graf-after--li\">None of these limitations are required to build an app, with or without React. In fact these are pretty strong constraints, and you should think carefully before adopting them even in parts of your app.</p>\n<p id=\"448f\" class=\"graf graf--p graf-after--p\">Do you have good reasons for doing so?</p>\n<p id=\"3650\" class=\"graf graf--p graf-after--p\">These limitations are appealing to me because they help build apps that:</p>\n<ul class=\"postList\">\n<li id=\"a4dc\" class=\"graf graf--li graf-after--p\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage?course=building-react-applications-with-idiomatic-redux\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://egghead.io/lessons/javascript-redux-persisting-the-state-to-the-local-storage?course=building-react-applications-with-idiomatic-redux\">Persist state to a local storage and then boot up from it, out of the box.</a></li>\n<li id=\"53b4\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"http://redux.js.org/docs/recipes/ServerRendering.html\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://redux.js.org/docs/recipes/ServerRendering.html\">Pre-fill state on the server, send it to the client in HTML, and boot up from it, out of the box.</a></li>\n<li id=\"6163\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/dtschust/redux-bug-reporter\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/dtschust/redux-bug-reporter\">Serialize user actions and attach them, together with a state snapshot, to automated bug reports, so that the product developers can replay them to reproduce the errors.</a></li>\n<li id=\"a3d0\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/philholden/redux-swarmlog\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/philholden/redux-swarmlog\">Pass action objects over the network to implement collaborative environments without dramatic changes to how the code is written.</a></li>\n<li id=\"00d2\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"http://redux.js.org/docs/recipes/ImplementingUndoHistory.html\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://redux.js.org/docs/recipes/ImplementingUndoHistory.html\">Maintain an undo history or implement optimistic mutations without dramatic changes to how the code is written.</a></li>\n<li id=\"7d1e\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/gaearon/redux-devtools\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/gaearon/redux-devtools\">Travel between the state history in development, and re-evaluate the current state from the action history when the code changes, a la TDD.</a></li>\n<li id=\"fb20\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://github.com/romseguy/redux-devtools-chart-monitor\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/romseguy/redux-devtools-chart-monitor\">Provide full inspection and control capabilities to the development tooling so that product developers can build custom tools for their apps.</a></li>\n<li id=\"342a\" class=\"graf graf--li graf-after--li\"><a class=\"markup--anchor markup--li-anchor\" href=\"https://youtu.be/gvVpSezT5_M?t=11m51s\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://youtu.be/gvVpSezT5_M?t=11m51s\">Provide alternative UIs while reusing most of the business logic.</a></li>\n</ul>\n<p id=\"8d50\" class=\"graf graf--p graf-after--li\">If you\u2019re working on\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://hyperterm.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://hyperterm.org/\">an extensible terminal</a>,\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://hacks.mozilla.org/2016/09/introducing-debugger-html/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://hacks.mozilla.org/2016/09/introducing-debugger-html/\">a JavaScript debugger</a>, or\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://twitter.com/necolas/status/727538799966715904\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://twitter.com/necolas/status/727538799966715904\">some kinds of webapps</a>, it might be worth giving it a try, or at least considering some of its ideas (they are\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/evancz/elm-architecture-tutorial\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/evancz/elm-architecture-tutorial\">not</a>\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/omcljs/om\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://github.com/omcljs/om\">new</a>, by the way!)</p>\n<p id=\"16c1\" class=\"graf graf--p graf-after--p\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"db72389e89d8\">However, if you\u2019re just learning React, don\u2019t make Redux your first choice.</span></p>\n<p id=\"641e\" class=\"graf graf--p graf-after--p\">Instead learn to\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://facebook.github.io/react/docs/thinking-in-react.html\" target=\"_blank\" rel=\"nofollow noopener noopener\" data-href=\"https://facebook.github.io/react/docs/thinking-in-react.html\">think in React</a>. Come back to Redux if you find a real need for it, or if you want to try something new. But\u00a0<span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"9b876f24936b\">approach it with caution, just like you do with any highly opinionated tool.</span></p>\n<p id=\"c4ed\" class=\"graf graf--p graf-after--p\">If you feel pressured to do things \u201cthe Redux way\u201d, it may be a sign that you or your teammates are taking it too seriously. It\u2019s just one of the tools in your toolbox,\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.youtube.com/watch?v=xsSnOQynTHs\">an experiment</a>\u00a0<a class=\"markup--anchor markup--p-anchor\" href=\"https://www.youtube.com/watch?v=uvAXVMwHJXU\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://www.youtube.com/watch?v=uvAXVMwHJXU\">gone wild</a>.</p>\n<p id=\"c33c\" class=\"graf graf--p graf-after--p\">Finally, don\u2019t forget that you can apply ideas from Redux without using Redux. For example, consider a React component with local state:</p>\n<pre><code data-enlighter-language=\"null\">import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n  state = { value: 0 };\r\n\r\n  increment = () =&gt; {\r\n    this.setState(prevState =&gt; ({\r\n      value: prevState.value + 1\r\n    }));\r\n  };\r\n\r\n  decrement = () =&gt; {\r\n    this.setState(prevState =&gt; ({\r\n      value: prevState.value - 1\r\n    }));\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      &lt;div&gt;\r\n        {this.state.value}\r\n        &lt;button onClick={this.increment}&gt;+&lt;/button&gt;\r\n        &lt;button onClick={this.decrement}&gt;-&lt;/button&gt;\r\n      &lt;/div&gt;\r\n    )\r\n  }\r\n}</code></pre>\n<p id=\"64b9\" class=\"graf graf--p graf-after--figure\">It is\u00a0<em class=\"markup--em markup--p-em\">perfectly fine\u00a0</em>as it is. Seriously, it bears repeating.</p>\n<p id=\"96ce\" class=\"graf graf--p graf-after--p\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"db72389e89d8 anon\"><em class=\"markup--em markup--p-em\">Local state is fine.</em></span></p>\n<p id=\"307f\" class=\"graf graf--p graf-after--p\">The tradeoff that Redux offers is to\u00a0<em class=\"markup--em markup--p-em\">add indirection\u00a0</em>to decouple \u201cwhat happened\u201d from \u201chow things change\u201d.</p>\n<p id=\"066f\" class=\"graf graf--p graf-after--p\">Is it always a good thing to do? No. It\u2019s a tradeoff.</p>\n<p id=\"53d3\" class=\"graf graf--p graf-after--p\">For example, we can extract a reducer from our component:</p>\n<pre><code data-enlighter-language=\"null\">import React, { Component } from 'react';\r\n\r\nconst counter = (state = { value: 0 }, action) =&gt; {\r\n  switch (action.type) {\r\n    case 'INCREMENT':\r\n      return { value: state.value + 1 };\r\n    case 'DECREMENT':\r\n      return { value: state.value - 1 };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nclass Counter extends Component {\r\n  state = counter(undefined, {});\r\n  \r\n  dispatch(action) {\r\n    this.setState(prevState =&gt; counter(prevState, action));\r\n  }\r\n\r\n  increment = () =&gt; {\r\n    this.dispatch({ type: 'INCREMENT' });\r\n  };\r\n\r\n  decrement = () =&gt; {\r\n    this.dispatch({ type: 'DECREMENT' });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      &lt;div&gt;\r\n        {this.state.value}\r\n        &lt;button onClick={this.increment}&gt;+&lt;/button&gt;\r\n        &lt;button onClick={this.decrement}&gt;-&lt;/button&gt;\r\n      &lt;/div&gt;\r\n    )\r\n  }\r\n}</code></pre>\n<p id=\"e8bc\" class=\"graf graf--p graf-after--figure\">Notice how we just used Redux without running\u00a0<em class=\"markup--em markup--p-em\">npm install.</em>\u00a0Wow!</p>\n<p id=\"653e\" class=\"graf graf--p graf-after--p\">Should you do this to your stateful components? Probably not. That is,\u00a0<em class=\"markup--em markup--p-em\">not unless you have a plan</em>\u00a0to benefit from this additional indirection. Having a plan is, in the parlance of our times, the \ud83d\udd11.</p>\n<p id=\"4b4c\" class=\"graf graf--p graf-after--p\"><a class=\"markup--anchor markup--p-anchor\" href=\"http://redux.js.org/\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"http://redux.js.org/\">Redux library</a>\u00a0itself is only a set of helpers to \u201cmount\u201d reducers to a single global store object. You can use as little, or as much of Redux, as you like.</p>\n<p id=\"658b\" class=\"graf graf--p graf-after--p\"><span class=\"markup--quote markup--p-quote is-other\" data-creator-ids=\"1ce42c2716a5\">But if you trade something off, make sure you get something in return.</span></p>\n<p>Source :\u00a0<a href=\"https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367\">https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367</a></p>\n", "slug": "you-might-not-need-redux", "date": 1545484213, "cats": [18, 13, 29, 23, 17, 16, 14]}